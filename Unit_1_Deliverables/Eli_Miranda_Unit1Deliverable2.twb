<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='font-family' value='Tableau Book' />
      <format attr='font-weight' value='bold' />
    </style-rule>
    <style-rule element='title'>
      <format attr='font-weight' value='bold' />
      <format attr='font-size' value='18' />
    </style-rule>
    <style-rule element='dash-title'>
      <format attr='font-weight' value='bold' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='flights+ (airtraffic)' inline='true' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.091x2ra1crddgg14fwkor0aimkmw'>
            <connection class='mysql' dbname='airtraffic' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[flights].[OriginAirportID]' />
              <expression op='[airports].[AirportID]' />
            </expression>
          </clause>
          <relation connection='mysql.091x2ra1crddgg14fwkor0aimkmw' name='flights' table='[flights]' type='table' />
          <relation connection='mysql.091x2ra1crddgg14fwkor0aimkmw' name='airports' table='[airports]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[flights].[OriginAirportID]' />
              <expression op='[airports].[AirportID]' />
            </expression>
          </clause>
          <relation connection='mysql.091x2ra1crddgg14fwkor0aimkmw' name='flights' table='[flights]' type='table' />
          <relation connection='mysql.091x2ra1crddgg14fwkor0aimkmw' name='airports' table='[airports]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[AirTime]' value='[flights].[AirTime]' />
          <map key='[AirlineName]' value='[flights].[AirlineName]' />
          <map key='[AirportID]' value='[airports].[AirportID]' />
          <map key='[AirportName]' value='[airports].[AirportName]' />
          <map key='[ArrDelay]' value='[flights].[ArrDelay]' />
          <map key='[ArrTime]' value='[flights].[ArrTime]' />
          <map key='[CRSArrTime]' value='[flights].[CRSArrTime]' />
          <map key='[CRSDepTime]' value='[flights].[CRSDepTime]' />
          <map key='[CancellationReason]' value='[flights].[CancellationReason]' />
          <map key='[Cancelled]' value='[flights].[Cancelled]' />
          <map key='[City]' value='[airports].[City]' />
          <map key='[Country]' value='[airports].[Country]' />
          <map key='[DepDelay]' value='[flights].[DepDelay]' />
          <map key='[DepTime]' value='[flights].[DepTime]' />
          <map key='[DestAirportID]' value='[flights].[DestAirportID]' />
          <map key='[Distance]' value='[flights].[Distance]' />
          <map key='[Diverted]' value='[flights].[Diverted]' />
          <map key='[FlightDate]' value='[flights].[FlightDate]' />
          <map key='[Flight_Number_Reporting_Airline]' value='[flights].[Flight_Number_Reporting_Airline]' />
          <map key='[Latitude]' value='[airports].[Latitude]' />
          <map key='[Longitude]' value='[airports].[Longitude]' />
          <map key='[OriginAirportID]' value='[flights].[OriginAirportID]' />
          <map key='[Reporting_Airline]' value='[flights].[Reporting_Airline]' />
          <map key='[State]' value='[airports].[State]' />
          <map key='[Tail_Number]' value='[flights].[Tail_Number]' />
          <map key='[TaxiIn]' value='[flights].[TaxiIn]' />
          <map key='[TaxiOut]' value='[flights].[TaxiOut]' />
          <map key='[WheelsOff]' value='[flights].[WheelsOff]' />
          <map key='[WheelsOn]' value='[flights].[WheelsOn]' />
          <map key='[id (airports)]' value='[airports].[id]' />
          <map key='[id]' value='[flights].[id]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[FlightDate]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>FlightDate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reporting_Airline</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Reporting_Airline]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>Reporting_Airline</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>32</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tail_Number</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Tail_Number]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>Tail_Number</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>32</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight_Number_Reporting_Airline</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Flight_Number_Reporting_Airline]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>Flight_Number_Reporting_Airline</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>32</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginAirportID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[OriginAirportID]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>OriginAirportID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestAirportID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[DestAirportID]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>DestAirportID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSDepTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CRSDepTime]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>CRSDepTime</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DepTime]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>DepTime</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepDelay</remote-name>
            <remote-type>3</remote-type>
            <local-name>[DepDelay]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>DepDelay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiOut</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TaxiOut]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>TaxiOut</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WheelsOff</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WheelsOff]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>WheelsOff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WheelsOn</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WheelsOn]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>WheelsOn</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiIn</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TaxiIn]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>TaxiIn</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSArrTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CRSArrTime]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>CRSArrTime</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ArrTime]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>ArrTime</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrDelay</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ArrDelay]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>ArrDelay</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cancelled</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Cancelled]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>Cancelled</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diverted</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Diverted]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>Diverted</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirTime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[AirTime]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>AirTime</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirlineName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AirlineName]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>AirlineName</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CancellationReason</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CancellationReason]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>CancellationReason</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id (airports)]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirportID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[AirportID]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>AirportID</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirportName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AirportName]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>AirportName</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Air Time' datatype='integer' name='[AirTime]' role='measure' type='quantitative' />
      <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
      <column datatype='string' name='[Airport Name, Country, State (clusters)]' parent-model='[AnalyticModel:{ec335a7f-22ad-4bb0-869d-5144ba09fee5}]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Airport Name, Country, State]' default='&quot;Not Clustered&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Cluster 1&quot;'>
            <value>(&quot;Akron-Canton Regional&quot;,&quot;United States&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;Asheville Regional&quot;,&quot;United States&quot;,&quot;North Carolina&quot;)</value>
            <value>(&quot;Augusta Regional at Bush Field&quot;,&quot;United States&quot;,&quot;Georgia&quot;)</value>
            <value>(&quot;Bangor International&quot;,&quot;United States&quot;,&quot;Maine&quot;)</value>
            <value>(&quot;Baton Rouge Metropolitan/Ryan Field&quot;,&quot;United States&quot;,&quot;Louisiana&quot;)</value>
            <value>(&quot;Bill and Hillary Clinton Nat Adams Field&quot;,&quot;United States&quot;,&quot;Arkansas&quot;)</value>
            <value>(&quot;Billings Logan International&quot;,&quot;United States&quot;,&quot;Montana&quot;)</value>
            <value>(&quot;Birmingham-Shuttlesworth International&quot;,&quot;United States&quot;,&quot;Alabama&quot;)</value>
            <value>(&quot;Bishop International&quot;,&quot;United States&quot;,&quot;Michigan&quot;)</value>
            <value>(&quot;Bismarck Municipal&quot;,&quot;United States&quot;,&quot;North Dakota&quot;)</value>
            <value>(&quot;Blue Grass&quot;,&quot;United States&quot;,&quot;Kentucky&quot;)</value>
            <value>(&quot;Bob Hope&quot;,&quot;United States&quot;,&quot;California&quot;)</value>
            <value>(&quot;Charleston AFB/International&quot;,&quot;United States&quot;,&quot;South Carolina&quot;)</value>
            <value>(&quot;Charlottesville Albemarle&quot;,&quot;United States&quot;,&quot;Virginia&quot;)</value>
            <value>(&quot;Cherry Capital&quot;,&quot;United States&quot;,&quot;Michigan&quot;)</value>
            <value>(&quot;Columbia Metropolitan&quot;,&quot;United States&quot;,&quot;South Carolina&quot;)</value>
            <value>(&quot;Corpus Christi International&quot;,&quot;United States&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Dane County Regional-Truax Field&quot;,&quot;United States&quot;,&quot;Wisconsin&quot;)</value>
            <value>(&quot;Daytona Beach International&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Eglin AFB Destin Fort Walton Beach&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Evansville Regional&quot;,&quot;United States&quot;,&quot;Indiana&quot;)</value>
            <value>(&quot;Fayetteville Regional/Grannis Field&quot;,&quot;United States&quot;,&quot;North Carolina&quot;)</value>
            <value>(&quot;Gainesville Regional&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Gerald R. Ford International&quot;,&quot;United States&quot;,&quot;Michigan&quot;)</value>
            <value>(&quot;Green Bay Austin Straubel International&quot;,&quot;United States&quot;,&quot;Wisconsin&quot;)</value>
            <value>(&quot;Greenville-Spartanburg International&quot;,&quot;United States&quot;,&quot;South Carolina&quot;)</value>
            <value>(&quot;Gulfport-Biloxi International&quot;,&quot;United States&quot;,&quot;Mississippi&quot;)</value>
            <value>(&quot;Harrisburg International&quot;,&quot;United States&quot;,&quot;Pennsylvania&quot;)</value>
            <value>(&quot;Hector International&quot;,&quot;United States&quot;,&quot;North Dakota&quot;)</value>
            <value>(&quot;Huntsville International-Carl T Jones Field&quot;,&quot;United States&quot;,&quot;Alabama&quot;)</value>
            <value>(&quot;Jackson Medgar Wiley Evers International&quot;,&quot;United States&quot;,&quot;Mississippi&quot;)</value>
            <value>(&quot;Jacksonville International&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;James M Cox/Dayton International&quot;,&quot;United States&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;Joe Foss Field&quot;,&quot;United States&quot;,&quot;South Dakota&quot;)</value>
            <value>(&quot;Lafayette Regional Paul Fournet Field&quot;,&quot;United States&quot;,&quot;Louisiana&quot;)</value>
            <value>(&quot;Long Beach Airport&quot;,&quot;United States&quot;,&quot;California&quot;)</value>
            <value>(&quot;Lovell Field&quot;,&quot;United States&quot;,&quot;Tennessee&quot;)</value>
            <value>(&quot;Lubbock Preston Smith International&quot;,&quot;United States&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;McAllen Miller International&quot;,&quot;United States&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;McGhee Tyson&quot;,&quot;United States&quot;,&quot;Tennessee&quot;)</value>
            <value>(&quot;Melbourne Orlando International&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Memphis International&quot;,&quot;United States&quot;,&quot;Tennessee&quot;)</value>
            <value>(&quot;Midland International Air and Space Port&quot;,&quot;United States&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Mobile Regional&quot;,&quot;United States&quot;,&quot;Alabama&quot;)</value>
            <value>(&quot;Myrtle Beach International&quot;,&quot;United States&quot;,&quot;South Carolina&quot;)</value>
            <value>(&quot;Newport News/Williamsburg International&quot;,&quot;United States&quot;,&quot;Virginia&quot;)</value>
            <value>(&quot;Norfolk International&quot;,&quot;United States&quot;,&quot;Virginia&quot;)</value>
            <value>(&quot;Northwest Arkansas National&quot;,&quot;United States&quot;,&quot;Arkansas&quot;)</value>
            <value>(&quot;Northwest Florida Beaches International&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Ontario International&quot;,&quot;United States&quot;,&quot;California&quot;)</value>
            <value>(&quot;Pensacola International&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Piedmont Triad International&quot;,&quot;United States&quot;,&quot;North Carolina&quot;)</value>
            <value>(&quot;Rapid City Regional&quot;,&quot;United States&quot;,&quot;South Dakota&quot;)</value>
            <value>(&quot;Reno/Tahoe International&quot;,&quot;United States&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;Richmond International&quot;,&quot;United States&quot;,&quot;Virginia&quot;)</value>
            <value>(&quot;Rick Husband Amarillo International&quot;,&quot;United States&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Roanoke Blacksburg Regional&quot;,&quot;United States&quot;,&quot;Virginia&quot;)</value>
            <value>(&quot;Sarasota/Bradenton International&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Savannah/Hilton Head International&quot;,&quot;United States&quot;,&quot;Georgia&quot;)</value>
            <value>(&quot;South Bend International&quot;,&quot;United States&quot;,&quot;Indiana&quot;)</value>
            <value>(&quot;Tallahassee International&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Tri Cities&quot;,&quot;United States&quot;,&quot;Tennessee&quot;)</value>
            <value>(&quot;Tri Cities&quot;,&quot;United States&quot;,&quot;Washington&quot;)</value>
            <value>(&quot;Tulsa International&quot;,&quot;United States&quot;,&quot;Oklahoma&quot;)</value>
            <value>(&quot;Valley International&quot;,&quot;United States&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;West Virginia International Yeager&quot;,&quot;United States&quot;,&quot;West Virginia&quot;)</value>
            <value>(&quot;Will Rogers World&quot;,&quot;United States&quot;,&quot;Oklahoma&quot;)</value>
            <value>(&quot;Wilmington International&quot;,&quot;United States&quot;,&quot;North Carolina&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 2&quot;'>
            <value>(&quot;Daniel K Inouye International&quot;,&quot;United States&quot;,&quot;Hawaii&quot;)</value>
            <value>(&quot;Ellison Onizuka Kona International at Keahole&quot;,&quot;United States&quot;,&quot;Hawaii&quot;)</value>
            <value>(&quot;Kahului Airport&quot;,&quot;United States&quot;,&quot;Hawaii&quot;)</value>
            <value>(&quot;Lihue Airport&quot;,&quot;United States&quot;,&quot;Hawaii&quot;)</value>
            <value>(&quot;Ted Stevens Anchorage International&quot;,&quot;United States&quot;,&quot;Alaska&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 3&quot;'>
            <value>(&quot;Albany International&quot;,&quot;United States&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Albuquerque International Sunport&quot;,&quot;United States&quot;,&quot;New Mexico&quot;)</value>
            <value>(&quot;Appleton International&quot;,&quot;United States&quot;,&quot;Wisconsin&quot;)</value>
            <value>(&quot;Austin - Bergstrom International&quot;,&quot;United States&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Baltimore/Washington International Thurgood Marshall&quot;,&quot;United States&quot;,&quot;Maryland&quot;)</value>
            <value>(&quot;Boise Air Terminal&quot;,&quot;United States&quot;,&quot;Idaho&quot;)</value>
            <value>(&quot;Bozeman Yellowstone International&quot;,&quot;United States&quot;,&quot;Montana&quot;)</value>
            <value>(&quot;Bradley International&quot;,&quot;United States&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Buffalo Niagara International&quot;,&quot;United States&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Burlington International&quot;,&quot;United States&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Charlotte Douglas International&quot;,&quot;United States&quot;,&quot;North Carolina&quot;)</value>
            <value>(&quot;Chicago Midway International&quot;,&quot;United States&quot;,&quot;Illinois&quot;)</value>
            <value>(&quot;Chicago O&apos;Hare International&quot;,&quot;United States&quot;,&quot;Illinois&quot;)</value>
            <value>(&quot;Cincinnati/Northern Kentucky International&quot;,&quot;United States&quot;,&quot;Kentucky&quot;)</value>
            <value>(&quot;City of Colorado Springs Municipal&quot;,&quot;United States&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Cleveland-Hopkins International&quot;,&quot;United States&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;Dallas Love Field&quot;,&quot;United States&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Dallas/Fort Worth International&quot;,&quot;United States&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Denver International&quot;,&quot;United States&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Des Moines International&quot;,&quot;United States&quot;,&quot;Iowa&quot;)</value>
            <value>(&quot;Detroit Metro Wayne County&quot;,&quot;United States&quot;,&quot;Michigan&quot;)</value>
            <value>(&quot;Eagle County Regional&quot;,&quot;United States&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;El Paso International&quot;,&quot;United States&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Eppley Airfield&quot;,&quot;United States&quot;,&quot;Nebraska&quot;)</value>
            <value>(&quot;Fort Lauderdale-Hollywood International&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Frederick Douglass Grtr Rochester International&quot;,&quot;United States&quot;,&quot;New York&quot;)</value>
            <value>(&quot;General Mitchell International&quot;,&quot;United States&quot;,&quot;Wisconsin&quot;)</value>
            <value>(&quot;George Bush Intercontinental/Houston&quot;,&quot;United States&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Glacier Park International&quot;,&quot;United States&quot;,&quot;Montana&quot;)</value>
            <value>(&quot;Great Falls International&quot;,&quot;United States&quot;,&quot;Montana&quot;)</value>
            <value>(&quot;Gunnison-Crested Butte Regional&quot;,&quot;United States&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Harry Reid International&quot;,&quot;United States&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;Hartsfield-Jackson Atlanta International&quot;,&quot;United States&quot;,&quot;Georgia&quot;)</value>
            <value>(&quot;Indianapolis International&quot;,&quot;United States&quot;,&quot;Indiana&quot;)</value>
            <value>(&quot;Jackson Hole&quot;,&quot;United States&quot;,&quot;Wyoming&quot;)</value>
            <value>(&quot;John Glenn Columbus International&quot;,&quot;United States&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;John Wayne Airport-Orange County&quot;,&quot;United States&quot;,&quot;California&quot;)</value>
            <value>(&quot;Juneau International&quot;,&quot;United States&quot;,&quot;Alaska&quot;)</value>
            <value>(&quot;Kansas City International&quot;,&quot;United States&quot;,&quot;Missouri&quot;)</value>
            <value>(&quot;Key West International&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;LaGuardia&quot;,&quot;United States&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Lehigh Valley International&quot;,&quot;United States&quot;,&quot;Pennsylvania&quot;)</value>
            <value>(&quot;Logan International&quot;,&quot;United States&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Long Island MacArthur&quot;,&quot;United States&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Louis Armstrong New Orleans International&quot;,&quot;United States&quot;,&quot;Louisiana&quot;)</value>
            <value>(&quot;Louisville Muhammad Ali International&quot;,&quot;United States&quot;,&quot;Kentucky&quot;)</value>
            <value>(&quot;Manchester Boston Regional&quot;,&quot;United States&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Metro Oakland International&quot;,&quot;United States&quot;,&quot;California&quot;)</value>
            <value>(&quot;Minneapolis-St Paul International&quot;,&quot;United States&quot;,&quot;Minnesota&quot;)</value>
            <value>(&quot;Missoula Montana&quot;,&quot;United States&quot;,&quot;Montana&quot;)</value>
            <value>(&quot;Montrose Regional&quot;,&quot;United States&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;Nashville International&quot;,&quot;United States&quot;,&quot;Tennessee&quot;)</value>
            <value>(&quot;Norman Y. Mineta San Jose International&quot;,&quot;United States&quot;,&quot;California&quot;)</value>
            <value>(&quot;Orlando International&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Palm Beach International&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Philadelphia International&quot;,&quot;United States&quot;,&quot;Pennsylvania&quot;)</value>
            <value>(&quot;Phoenix Sky Harbor International&quot;,&quot;United States&quot;,&quot;Arizona&quot;)</value>
            <value>(&quot;Pittsburgh International&quot;,&quot;United States&quot;,&quot;Pennsylvania&quot;)</value>
            <value>(&quot;Portland International&quot;,&quot;United States&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;Portland International Jetport&quot;,&quot;United States&quot;,&quot;Maine&quot;)</value>
            <value>(&quot;Raleigh-Durham International&quot;,&quot;United States&quot;,&quot;North Carolina&quot;)</value>
            <value>(&quot;Rhode Island Tf Green International&quot;,&quot;United States&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Ronald Reagan Washington National&quot;,&quot;United States&quot;,&quot;Virginia&quot;)</value>
            <value>(&quot;Sacramento International&quot;,&quot;United States&quot;,&quot;California&quot;)</value>
            <value>(&quot;Salt Lake City International&quot;,&quot;United States&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;San Antonio International&quot;,&quot;United States&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;San Diego International&quot;,&quot;United States&quot;,&quot;California&quot;)</value>
            <value>(&quot;Santa Barbara Municipal&quot;,&quot;United States&quot;,&quot;California&quot;)</value>
            <value>(&quot;Southwest Florida International&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Spokane International&quot;,&quot;United States&quot;,&quot;Washington&quot;)</value>
            <value>(&quot;St Louis Lambert International&quot;,&quot;United States&quot;,&quot;Missouri&quot;)</value>
            <value>(&quot;Syracuse Hancock International&quot;,&quot;United States&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Tampa International&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;The Eastern Iowa&quot;,&quot;United States&quot;,&quot;Iowa&quot;)</value>
            <value>(&quot;Tucson International&quot;,&quot;United States&quot;,&quot;Arizona&quot;)</value>
            <value>(&quot;Westchester County&quot;,&quot;United States&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Wichita Dwight D Eisenhower National&quot;,&quot;United States&quot;,&quot;Kansas&quot;)</value>
            <value>(&quot;Wilkes Barre Scranton International&quot;,&quot;United States&quot;,&quot;Pennsylvania&quot;)</value>
            <value>(&quot;William P Hobby&quot;,&quot;United States&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;Yampa Valley&quot;,&quot;United States&quot;,&quot;Colorado&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 4&quot;'>
            <value>(&quot;Cyril E King&quot;,&quot;United States&quot;,&quot;U.S. Virgin Islands&quot;)</value>
            <value>(&quot;Fairbanks International&quot;,&quot;United States&quot;,&quot;Alaska&quot;)</value>
            <value>(&quot;Fresno Yosemite International&quot;,&quot;United States&quot;,&quot;California&quot;)</value>
            <value>(&quot;Henry E. Rohlsen&quot;,&quot;United States&quot;,&quot;U.S. Virgin Islands&quot;)</value>
            <value>(&quot;John F. Kennedy International&quot;,&quot;United States&quot;,&quot;New York&quot;)</value>
            <value>(&quot;Los Angeles International&quot;,&quot;United States&quot;,&quot;California&quot;)</value>
            <value>(&quot;Luis Munoz Marin International&quot;,&quot;United States&quot;,&quot;Puerto Rico&quot;)</value>
            <value>(&quot;Miami International&quot;,&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;Newark Liberty International&quot;,&quot;United States&quot;,&quot;New Jersey&quot;)</value>
            <value>(&quot;Palm Springs International&quot;,&quot;United States&quot;,&quot;California&quot;)</value>
            <value>(&quot;San Francisco International&quot;,&quot;United States&quot;,&quot;California&quot;)</value>
            <value>(&quot;Seattle/Tacoma International&quot;,&quot;United States&quot;,&quot;Washington&quot;)</value>
            <value>(&quot;Washington Dulles International&quot;,&quot;United States&quot;,&quot;Virginia&quot;)</value>
          </bin>
        </calculation>
      </column>
      <column caption='Airport ID' datatype='integer' name='[AirportID]' role='dimension' type='ordinal' />
      <column caption='Airport Name' datatype='string' name='[AirportName]' role='dimension' type='nominal' />
      <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
      <column caption='Arr Time' datatype='string' name='[ArrTime]' role='dimension' type='nominal' />
      <column caption='CRS Arr Time' datatype='string' name='[CRSArrTime]' role='dimension' type='nominal' />
      <column caption='CRS Dep Time' datatype='string' name='[CRSDepTime]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(AVG([DepDelay]))'>
          <table-calc ordering-field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[State]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(COUNT([__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767]), -2, 0)'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column caption='Average Distance by Unique Plane' datatype='real' name='[Calculation_235031664451280897]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Distance])/COUNTD([Tail_Number])' />
      </column>
      <column caption='Delayed Dept Test' datatype='string' name='[Calculation_235031664490143749]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF INT([DepDelay]) &gt; 75 THEN &quot;Major Delay&quot; &#13;&#10;    ELSEIF INT([DepDelay]) &gt; 50 THEN &quot;Moderate-Major Delay&quot;&#13;&#10;    ELSEIF INT([DepDelay]) &gt; 25 THEN &quot;Minor-moderate Delay&quot; &#13;&#10;    ELSEIF INT([DepDelay]) &gt; 0 THEN &quot;Minor Delay&quot; &#13;&#10;    Else &quot;On Time&quot;   &#13;&#10;END' />
      </column>
      <column caption='Delayed vs On-Time' datatype='string' name='[Calculation_673851151189188608]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF INT([DepDelay]) &gt; 0 THEN &quot;Delayed&quot; &#13;&#10;Else &quot;On Time&quot; &#13;&#10;END' />
      </column>
      <column caption='Cancellation Reason' datatype='string' name='[CancellationReason]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
      <column caption='Dep Time' datatype='string' name='[DepTime]' role='dimension' type='nominal' />
      <column caption='Dest Airport ID' datatype='integer' name='[DestAirportID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Distance]' role='measure' type='quantitative' />
      <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
      <column caption='Flight Number Reporting Airline' datatype='string' name='[Flight_Number_Reporting_Airline]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Origin Airport ID' datatype='integer' name='[OriginAirportID]' role='dimension' type='ordinal' />
      <column caption='Reporting Airline' datatype='string' name='[Reporting_Airline]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Tail Number' datatype='string' name='[Tail_Number]' role='dimension' type='nominal' />
      <column caption='Taxi In' datatype='integer' name='[TaxiIn]' role='measure' type='quantitative' />
      <column caption='Taxi Out' datatype='integer' name='[TaxiOut]' role='measure' type='quantitative' />
      <column caption='Wheels Off' datatype='string' name='[WheelsOff]' role='dimension' type='nominal' />
      <column caption='Wheels On' datatype='string' name='[WheelsOn]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='flights' datatype='table' name='[__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767]' role='measure' type='quantitative' />
      <column caption='Id (Airports)' datatype='integer' name='[id (airports)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column-instance column='[AirTime]' derivation='Avg' name='[avg:AirTime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Distance]' derivation='Avg' name='[avg:Distance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tail_Number]' derivation='CountD' name='[ctd:Tail_Number:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FlightDate]' derivation='Month' name='[mn:FlightDate:ok]' pivot='key' type='ordinal' />
      <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
      <column-instance column='[AirportName]' derivation='None' name='[none:AirportName:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_673851151189188608]' derivation='None' name='[none:Calculation_673851151189188608:nk]' pivot='key' type='nominal' />
      <column-instance column='[CancellationReason]' derivation='None' name='[none:CancellationReason:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Tail_Number]' derivation='None' name='[none:Tail_Number:nk]' pivot='key' type='nominal' />
      <column-instance column='[Tail_Number]' derivation='CountD' name='[pcdf:ctd:Tail_Number:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]' ordering-field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[FlightDate]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Distance]' derivation='Sum' name='[pcdf:sum:Distance:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]' ordering-field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[FlightDate]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Distance]' derivation='Sum' name='[sum:Distance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FlightDate]' derivation='Month-Trunc' name='[tmn:FlightDate:ok]' pivot='key' type='ordinal' />
      <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Cancellation Reason,MONTH(Flight Date))' hidden='true' name='[Action (Cancellation Reason,MONTH(Flight Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[CancellationReason]' />
          <groupfilter function='level-members' level='[tmn:FlightDate:ok]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' hidden='true' name='[Airport Name, Country, State]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:AirportName:nk]' />
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/bluel/OneDrive/Desktop/BrainStation Data Science EAM_2024/Class Work Files/Tableaau/flights+ (airtraffic).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/15/2024 02:06:19 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[AirTime]' value='[Extract].[AirTime]' />
            <map key='[AirlineName]' value='[Extract].[AirlineName]' />
            <map key='[AirportID]' value='[Extract].[AirportID]' />
            <map key='[AirportName]' value='[Extract].[AirportName]' />
            <map key='[ArrDelay]' value='[Extract].[ArrDelay]' />
            <map key='[ArrTime]' value='[Extract].[ArrTime]' />
            <map key='[CRSArrTime]' value='[Extract].[CRSArrTime]' />
            <map key='[CRSDepTime]' value='[Extract].[CRSDepTime]' />
            <map key='[CancellationReason]' value='[Extract].[CancellationReason]' />
            <map key='[Cancelled]' value='[Extract].[Cancelled]' />
            <map key='[City]' value='[Extract].[City]' />
            <map key='[Country]' value='[Extract].[Country]' />
            <map key='[DepDelay]' value='[Extract].[DepDelay]' />
            <map key='[DepTime]' value='[Extract].[DepTime]' />
            <map key='[DestAirportID]' value='[Extract].[DestAirportID]' />
            <map key='[Distance]' value='[Extract].[Distance]' />
            <map key='[Diverted]' value='[Extract].[Diverted]' />
            <map key='[FlightDate]' value='[Extract].[FlightDate]' />
            <map key='[Flight_Number_Reporting_Airline]' value='[Extract].[Flight_Number_Reporting_Airline]' />
            <map key='[Latitude]' value='[Extract].[Latitude]' />
            <map key='[Longitude]' value='[Extract].[Longitude]' />
            <map key='[OriginAirportID]' value='[Extract].[OriginAirportID]' />
            <map key='[Reporting_Airline]' value='[Extract].[Reporting_Airline]' />
            <map key='[State]' value='[Extract].[State]' />
            <map key='[Tail_Number]' value='[Extract].[Tail_Number]' />
            <map key='[TaxiIn]' value='[Extract].[TaxiIn]' />
            <map key='[TaxiOut]' value='[Extract].[TaxiOut]' />
            <map key='[WheelsOff]' value='[Extract].[WheelsOff]' />
            <map key='[WheelsOn]' value='[Extract].[WheelsOn]' />
            <map key='[id (airports)]' value='[Extract].[id]' />
            <map key='[id]' value='[Extract].[id1]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='flights+ (airtraffic)' increment-value='%null%' refresh-type='create' rows-inserted='6521361' timestamp-start='2024-02-15 02:04:51.655' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>id1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id1</remote-alias>
              <ordinal>0</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6521361</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FlightDate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[FlightDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightDate</remote-alias>
              <ordinal>1</ordinal>
              <family>flights</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>730</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Reporting_Airline</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Reporting_Airline]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Reporting_Airline</remote-alias>
              <ordinal>2</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tail_Number</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Tail_Number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tail_Number</remote-alias>
              <ordinal>3</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3921</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Flight_Number_Reporting_Airline</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Flight_Number_Reporting_Airline]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Flight_Number_Reporting_Airline</remote-alias>
              <ordinal>4</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>21002</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginAirportID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[OriginAirportID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginAirportID</remote-alias>
              <ordinal>5</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestAirportID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DestAirportID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestAirportID</remote-alias>
              <ordinal>6</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>220</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CRSDepTime</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CRSDepTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CRSDepTime</remote-alias>
              <ordinal>7</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1857</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepTime</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DepTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepTime</remote-alias>
              <ordinal>8</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1800</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DepDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepDelay</remote-alias>
              <ordinal>9</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1041</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TaxiOut</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TaxiOut]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TaxiOut</remote-alias>
              <ordinal>10</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>201</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WheelsOff</remote-name>
              <remote-type>129</remote-type>
              <local-name>[WheelsOff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WheelsOff</remote-alias>
              <ordinal>11</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1737</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WheelsOn</remote-name>
              <remote-type>129</remote-type>
              <local-name>[WheelsOn]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WheelsOn</remote-alias>
              <ordinal>12</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2115</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TaxiIn</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TaxiIn]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TaxiIn</remote-alias>
              <ordinal>13</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>90</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CRSArrTime</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CRSArrTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CRSArrTime</remote-alias>
              <ordinal>14</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1607</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrTime</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ArrTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrTime</remote-alias>
              <ordinal>15</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2116</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ArrDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrDelay</remote-alias>
              <ordinal>16</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1159</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cancelled</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Cancelled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cancelled</remote-alias>
              <ordinal>17</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Diverted</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Diverted]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Diverted</remote-alias>
              <ordinal>18</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AirTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[AirTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AirTime</remote-alias>
              <ordinal>19</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>857</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Distance</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Distance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Distance</remote-alias>
              <ordinal>20</ordinal>
              <family>flights</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1419</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AirlineName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AirlineName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AirlineName</remote-alias>
              <ordinal>21</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CancellationReason</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CancellationReason]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CancellationReason</remote-alias>
              <ordinal>22</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id (airports)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>23</ordinal>
              <family>airports</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AirportID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[AirportID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AirportID</remote-alias>
              <ordinal>24</ordinal>
              <family>airports</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AirportName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AirportName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AirportName</remote-alias>
              <ordinal>25</ordinal>
              <family>airports</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>229</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>26</ordinal>
              <family>airports</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>233</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>27</ordinal>
              <family>airports</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>28</ordinal>
              <family>airports</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>59</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>29</ordinal>
              <family>airports</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>30</ordinal>
              <family>airports</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_7AB16370439C4FD5960A4132701DB767]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[mn:FlightDate:ok]' type='palette'>
            <map to='#499894'>
              <bucket>7</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2018</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3</bucket>
            </map>
            <map to='#79706e'>
              <bucket>11</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>8</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>4</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>5</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>12</bucket>
            </map>
            <map to='#e15759'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2019</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0p8isfi146xkff1bxj4vi1pksxzi].[pcdf:sum:Distance:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0p8isfi146xkff1bxj4vi1pksxzi].[sum:Distance:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0p8isfi146xkff1bxj4vi1pksxzi].[ctd:Tail_Number:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Tail_Number:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0p8isfi146xkff1bxj4vi1pksxzi].[pcdf:ctd:Tail_Number:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:CancellationReason:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Weather&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Security&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;National Air System&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carrier&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:FlightDate:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2019</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_673851151189188608:nk]' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;Delayed&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;On Time&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AirlineName:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[Airport Name, Country, State (clusters)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Cluster 1&quot;</bucket>
            <bucket>&quot;Cluster 2&quot;</bucket>
            <bucket>&quot;Cluster 3&quot;</bucket>
            <bucket>&quot;Cluster 4&quot;</bucket>
            <bucket>&quot;Not Clustered&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{ec335a7f-22ad-4bb0-869d-5144ba09fee5}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:AirTime:qk]' />
            <field name='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:Distance:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields>
            <field name='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]' />
            <field name='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Country:nk]' />
            <field name='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]' />
          </lod-fields>
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='flights' id='flights_7AB16370439C4FD5960A4132701DB767'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[flights].[OriginAirportID]' />
                    <expression op='[airports].[AirportID]' />
                  </expression>
                </clause>
                <relation connection='mysql.091x2ra1crddgg14fwkor0aimkmw' name='flights' table='[flights]' type='table' />
                <relation connection='mysql.091x2ra1crddgg14fwkor0aimkmw' name='airports' table='[airports]' type='table' />
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_657941B4B6DD4B549F573EC92B38D9C3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Q4.Dashboard' type='sheet' worksheet='Q2.4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Q4.Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_BDA7E488F35E44BC8205F2BF31866950]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Q4.Dashboard' type='sheet' worksheet='Q2.3 Cont. US' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Q4.Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_69F8DF69060845EF84FD65F027997614]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Q4.Dashboard' type='sheet' worksheet='Q4.Extra_Vis' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Q4.Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Q 1.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Number of Flights 2018 vs 2019 by Airline</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontsize='10'>1.1 How do the three carriers compare in terms of total number of flights between 2018 and 2019?</run>
            <run>Æ&#10;&#10;</run>
            <run bold='false' fontcolor='#000000' fontsize='10'>This visualization shows the count of flights for each airline for the years 2018 &amp; 2019. It can be observed that all three airlines tend to have the same trends when observing the flight counts between 2018 and 2019 in that they all saw an increase in flight counts from 2018 to 2019. Despite all the airlines having this year over year upward trends, Southwest Airlines has a significantly higher flight count compared to Delta and American Airlines. For example Southwest had over ~420,000 more flights than its competitiors in 2018. However, that gap starts to narrow in 2019 with  Southwest still leading its competitors, but at the lower value of  ~394,000. Delta and American Airline seem to have a very similar count in flights, but Delta has a slightly higher amount. As for their year over year changes, Delta saw an increase of ~42,000 flights while American only saw an increase of ~30,000 flights. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' />
          </datasources>
          <datasource-dependencies datasource='federated.0p8isfi146xkff1bxj4vi1pksxzi'>
            <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='flights' datatype='integer' name='[__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='flights' datatype='table' name='[__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767]' role='measure' type='quantitative' />
            <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:FlightDate:ok]' member='2018' />
              <groupfilter function='member' level='[yr:FlightDate:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]' value='126' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' value='13' />
            <format attr='font-size' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]' value='12' />
            <format attr='font-size' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]' value='13' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='13' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]' />
              <text column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</rows>
        <cols>([federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk] / [federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok])</cols>
      </table>
      <simple-id uuid='{FFF51767-B759-452F-B27F-96E15C6035AC}' />
    </worksheet>
    <worksheet name='Q 1.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>MoM Flight Count by Airline in 2018 &amp; 2019 </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontsize='10'>1.2 How do the monthly number of flights vary over time for each of the three carriers?</run>
            <run>Æ&#10;&#10;</run>
            <run bold='false' fontcolor='#000000' fontsize='10'>This line graph shows how each airline&apos;s flight count varies  month over month (MoM) in 2018 &amp; 2019. Each of the airlines show a very similiar pattern of peaks and valleys as we analyze the flight count on a monthly basis. Ex. For February, in both 2018 &amp; 2019, appear to be the lowest valley/low-point for all 3 airlines. Which makes sense as this is typically a low performing period in the retail and commercial spaces as consumers are still dealing with fatigue from the recent holidays expendatures. All the airlines see a strong rebound in March for both years, which happens to be a month where most Spring breaks occur. Additionally, all airlines appear to show an increase flights or strong number over the summer months for both years consistent with increase in vacations that are taken during the summer. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' />
          </datasources>
          <datasource-dependencies datasource='federated.0p8isfi146xkff1bxj4vi1pksxzi'>
            <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='flights' datatype='integer' name='[__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='flights' datatype='table' name='[__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767]' role='measure' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='Month' name='[mn:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[FlightDate]' derivation='Month-Trunc' name='[tmn:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[mn:FlightDate:ok]'>
            <groupfilter from='1' function='range' level='[mn:FlightDate:ok]' to='12' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[mn:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' value='13' />
            <format attr='font-size' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='13' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_2' value='#00000000' />
            <format attr='stroke-size' id='annotation_2' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.80160218477249146' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</rows>
        <cols>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>67337</value>
                <value>&quot;Delta Air Lines Inc.&quot;</value>
                <value>#2019-02-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>71059</value>
                <value>&quot;American Airlines Inc.&quot;</value>
                <value>#2019-02-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>99500</value>
                <value>&quot;Southwest Airlines Co.&quot;</value>
                <value>#2019-02-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>97017</value>
                <value>&quot;Southwest Airlines Co.&quot;</value>
                <value>#2018-02-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>66302</value>
                <value>&quot;Delta Air Lines Inc.&quot;</value>
                <value>#2018-02-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>120114</value>
                <value>&quot;Southwest Airlines Co.&quot;</value>
                <value>#2018-07-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>119342</value>
                <value>&quot;Southwest Airlines Co.&quot;</value>
                <value>#2019-07-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>87966</value>
                <value>&quot;Delta Air Lines Inc.&quot;</value>
                <value>#2018-08-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>91278</value>
                <value>&quot;Delta Air Lines Inc.&quot;</value>
                <value>#2019-08-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='10' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>80736</value>
                <value>&quot;American Airlines Inc.&quot;</value>
                <value>#2018-07-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='11' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>82689</value>
                <value>&quot;American Airlines Inc.&quot;</value>
                <value>#2019-08-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='12' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>116420</value>
                <value>&quot;Southwest Airlines Co.&quot;</value>
                <value>#2018-03-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='13' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>81365</value>
                <value>&quot;Delta Air Lines Inc.&quot;</value>
                <value>#2018-03-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='14' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>78208</value>
                <value>&quot;American Airlines Inc.&quot;</value>
                <value>#2018-03-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='15' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>119413</value>
                <value>&quot;Southwest Airlines Co.&quot;</value>
                <value>#2019-03-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='16' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>84208</value>
                <value>&quot;Delta Air Lines Inc.&quot;</value>
                <value>#2019-03-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='17' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>80027</value>
                <value>&quot;American Airlines Inc.&quot;</value>
                <value>#2019-03-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>68,389</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.4'>
                  <node-reference>
                    <fields>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>#2018-02-01 00:00:00#</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='73932.401392111366'>
                  <node-reference>
                    <axis>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.575'>
                  <node-reference>
                    <fields>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>#2018-04-01 00:00:00#</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='63983.705336426916'>
                  <node-reference>
                    <axis>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{BA6D9428-925F-4E87-824E-8E700AB16C19}' />
    </worksheet>
    <worksheet name='Q 1.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Origin Airports Based on Number of Flights &amp; by Airline</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontsize='10'>1.3 What are the top 10 most highly utilized origin airports for the three carriers and how are the number of flights from these airports distributed between these carriers? Build a stacked bar chart to answer this question and describe the key patterns, similarities, and differences in how each carrier&apos;s flights are distributed at each of the 10 airports.</run>
            <run>Æ&#10;&#10;</run>
            <run bold='false' fontcolor='#000000' fontsize='10'>Above are the top 10 most highly utilized origin airports for the three carriers, where  flight count is used to determine the utilization rate. The first thing you may notice is that not all airlines have flights out of  each origin airports For example American Airlines does not have any flights out of Chicago Midway Int., while Southwest Airlines has not flights out of Dalles/Fort Worth Int. However, Delta Airlines does have flights out of all top ten origin airports. The next thing to make note of the distribution of flights across each origin airports. Delta Airlines has the majority of their flights coming out of the 3/10 origin airports with their top 2 airports (Atlanta Int. &amp; Minneapolis Int. ) have flights numbering in 6-digits. American Airlines shows a similar pattern as Delta Airlines in Dallas Forth Worth Int &amp; Charlotte Douglass Int. Southwest Airlines appears to distribute their flights more evenly across ther origin airports, keeping the range betwen ~81,000 - ~161,000 for 7/10 of the origin airports. The remaining 3 aiprots have less than ~16,200 flights or no flights at all for Southwest Airlines. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' />
          </datasources>
          <datasource-dependencies datasource='federated.0p8isfi146xkff1bxj4vi1pksxzi'>
            <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
            <column caption='Airport Name' datatype='string' name='[AirportName]' role='dimension' type='nominal' />
            <column caption='Origin Airport ID' datatype='integer' name='[OriginAirportID]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='flights' datatype='integer' name='[__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='flights' datatype='table' name='[__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767]' role='measure' type='quantitative' />
            <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[AirportName]' derivation='None' name='[none:AirportName:nk]' pivot='key' type='nominal' />
            <column-instance column='[OriginAirportID]' derivation='None' name='[none:OriginAirportID:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:OriginAirportID:ok]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:OriginAirportID:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:OriginAirportID:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]' field-type='quantitative' max='634781' min='-9627' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]' value='67' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' value='13' />
            <format attr='font-size' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='13' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_1' value='#00000000' />
            <format attr='fill-color' id='annotation_2' value='#00000000' />
            <format attr='fill-color' id='annotation_3' value='#00000000' />
            <format attr='fill-color' id='annotation_4' value='#00000000' />
            <format attr='fill-color' id='annotation_5' value='#00000000' />
            <format attr='stroke-color' id='annotation_1' value='#000000' />
            <format attr='stroke-color' id='annotation_2' value='#000000' />
            <format attr='stroke-color' id='annotation_3' value='#000000' />
            <format attr='stroke-color' id='annotation_4' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' />
              <text column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</rows>
        <cols>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>24498</value>
                <value>&quot;American Airlines Inc.&quot;</value>
                <value>&quot;Hartsfield-Jackson Atlanta International&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>16466</value>
                <value>&quot;Delta Air Lines Inc.&quot;</value>
                <value>&quot;Phoenix Sky Harbor International&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>17160</value>
                <value>&quot;Delta Air Lines Inc.&quot;</value>
                <value>&quot;Dallas/Fort Worth International&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>27097</value>
                <value>&quot;Delta Air Lines Inc.&quot;</value>
                <value>&quot;Harry Reid International&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>14378</value>
                <value>&quot;American Airlines Inc.&quot;</value>
                <value>&quot;Minneapolis-St Paul International&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>16262</value>
                <value>&quot;Southwest Airlines Co.&quot;</value>
                <value>&quot;Minneapolis-St Paul International&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>23781</value>
                <value>&quot;Delta Air Lines Inc.&quot;</value>
                <value>&quot;Denver International&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4294</value>
                <value>&quot;Delta Air Lines Inc.&quot;</value>
                <value>&quot;Chicago Midway International&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                  <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>14001</value>
                <value>&quot;Delta Air Lines Inc.&quot;</value>
                <value>&quot;Baltimore/Washington International Thurgood Marshall&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='88'>
            <formatted-text>
              <run fontcolor='#000000'> &lt;</run>
              <run fontcolor='#000000'>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</run>
              <run fontcolor='#000000'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>28695</value>
                    <value>&quot;American Airlines Inc.&quot;</value>
                    <value>&quot;Harry Reid International&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='52' y='1' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='88'>
            <formatted-text>
              <run fontcolor='#000000'>&lt;</run>
              <run fontcolor='#000000'>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</run>
              <run fontcolor='#000000'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>20563</value>
                    <value>&quot;American Airlines Inc.&quot;</value>
                    <value>&quot;Denver International&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='53' y='0' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='88'>
            <formatted-text>
              <run fontcolor='#000000'>&lt;</run>
              <run fontcolor='#000000'>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</run>
              <run fontcolor='#000000'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>13386</value>
                    <value>&quot;Delta Air Lines Inc.&quot;</value>
                    <value>&quot;Charlotte Douglas International&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='56' y='-10' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='0' text-width='88'>
            <formatted-text>
              <run fontcolor='#000000'> &lt;</run>
              <run fontcolor='#000000'>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</run>
              <run fontcolor='#000000'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>6434</value>
                    <value>&quot;Southwest Airlines Co.&quot;</value>
                    <value>&quot;Charlotte Douglas International&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='63' y='18' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='88'>
            <formatted-text>
              <run fontcolor='#000000'>&lt;</run>
              <run fontcolor='#000000'>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</run>
              <run fontcolor='#000000'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>11783</value>
                    <value>&quot;American Airlines Inc.&quot;</value>
                    <value>&quot;Baltimore/Washington International Thurgood Marshall&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='60' y='2' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{00717118-260C-470F-B15E-105986E9AB33}' />
    </worksheet>
    <worksheet name='Q2.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>On-Time vs Delayed Flights for 2019</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontsize='10'>2.1 Create a calculated field that identifies on-time vs delayed departures: </run>
            <run fontcolor='#000000' fontsize='10'>consider negative or missing delay times as on-time</run>
            <run bold='false' fontcolor='#000000' fontsize='10'>. Then, create a visualization that contrasts the number of on-time vs delayed flights broken down by month for the year 2019. Which month has the highest/lowest total number of delayed flights?</run>
            <run>Æ&#10;&#10;</run>
            <run bold='false' fontcolor='#000000' fontsize='10'>This line graph we will explore more of timeliness of flights, specifically for the year 2019 (Please note this visual can be filtered to show either or both lines for 2018 &amp; 2019). This line graph shows two trend lines that show the distrbution of on-time flights vs delayed flights. Both trends show an inverse pattern of movement MoM, where the peaks in delays occur in the same month as the valleys in on-time flight, which is a pattern we expect to see. Addtionally, the highest amount of delayed flights took place in June. at 129,655 flights, where as the lowest amount of delay flights was found to be in September, at 79,689 flights. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' />
          </datasources>
          <datasource-dependencies datasource='federated.0p8isfi146xkff1bxj4vi1pksxzi'>
            <column caption='Delayed vs On-Time' datatype='string' name='[Calculation_673851151189188608]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF INT([DepDelay]) &gt; 0 THEN &quot;Delayed&quot; &#13;&#10;Else &quot;On Time&quot; &#13;&#10;END' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column-instance column='[DepDelay]' derivation='Count' name='[cnt:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_673851151189188608]' derivation='None' name='[none:Calculation_673851151189188608:nk]' pivot='key' type='nominal' />
            <column-instance column='[FlightDate]' derivation='Month-Trunc' name='[tmn:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]'>
            <groupfilter function='member' level='[yr:FlightDate:ok]' member='2019' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[cnt:DepDelay:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]' value='95' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]' />
              <text column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[cnt:DepDelay:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[cnt:DepDelay:qk]</rows>
        <cols>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</cols>
      </table>
      <simple-id uuid='{013D22E6-82BA-4450-BE71-AB68EF4C5880}' />
    </worksheet>
    <worksheet name='Q2.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Quarterly Average Departure Delay (Minutes) by State for 2018 &amp; 2019</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontsize='10'>2.2 Create a highlight table (crosstab) that shows the average departure delay for each state broken down by year and fiscal quarter. Use the calculated field from the previous question to include only those flights that are delayed. What states have the highest departure delay for flights and when? Describe your insights and do some research why these delays could have occurred. Indicate which 3 states have the highest average delays in Q1 of 2019.</run>
            <run>Æ&#10;&#10;</run>
            <run bold='false' fontcolor='#000000' fontsize='10'>This highlight table (crosstab) operates like a heatmap in that the color/shade of blue will grow in intensity/darkness as the Average Departure Delay increases. Using the quarters that show an Average Departure Delay of 90 minutes or more as a baseline, it can be determined that the following 3 states have the highest Average Departure Delay, of all states, across each quarter: North Dakota (103.92 min,, Q3 2018), West Virgina (98.06 min., Q4 2018) &amp; Wyoming (98.06 min., Q1 2019). This is likley due to the eventful hurricane season that spans Q3 2018 &amp; Q4 2018 followed by the snow/ice events that typically occurs between Q4 and Q1 of the following year. Keep in mind that hurricanes impacting the tropics will delay the arrival of planes needed in those states, which subsequently delay flights coming out of the those states. Q1 2019 is particulary remarkable as the three states mentioned prior, all experienced Average Departure Delay at ranging between 84 min &amp; 91 min., which is the most narrowest range with the most significant delay seen for these three states across all quarters in 2018 &amp; 2019.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' />
          </datasources>
          <datasource-dependencies datasource='federated.0p8isfi146xkff1bxj4vi1pksxzi'>
            <column caption='Delayed vs On-Time' datatype='string' name='[Calculation_673851151189188608]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF INT([DepDelay]) &gt; 0 THEN &quot;Delayed&quot; &#13;&#10;Else &quot;On Time&quot; &#13;&#10;END' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_673851151189188608]' derivation='None' name='[none:Calculation_673851151189188608:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[FlightDate]' derivation='Quarter' name='[qr:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FlightDate]' derivation='Quarter-Trunc' name='[tqr:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]'>
            <groupfilter function='member' level='[none:Calculation_673851151189188608:nk]' member='&quot;Delayed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[qr:FlightDate:ok]'>
            <groupfilter from='1' function='range' level='[qr:FlightDate:ok]' to='4' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tqr:FlightDate:ok]' direction='ASC'>
            <dictionary>
              <bucket>#2018-01-01 00:00:00#</bucket>
              <bucket>#2018-04-01 00:00:00#</bucket>
              <bucket>#2018-07-01 00:00:00#</bucket>
              <bucket>#2018-10-01 00:00:00#</bucket>
              <bucket>#2019-01-01 00:00:00#</bucket>
              <bucket>#2019-04-01 00:00:00#</bucket>
              <bucket>#2019-07-01 00:00:00#</bucket>
              <bucket>#2019-10-01 00:00:00#</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:FlightDate:ok]' member='2018' />
              <groupfilter function='member' level='[yr:FlightDate:ok]' member='2019' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tqr:FlightDate:ok]' member-value='#2019-01-01 00:00:00#' />
                <sort-filter level-name='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]' member-value='2019' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]</column>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[qr:FlightDate:ok]</column>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='19' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' num-steps='5' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='data-highlighter'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' />
              <text column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]</rows>
        <cols>([federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok] / [federated.0p8isfi146xkff1bxj4vi1pksxzi].[tqr:FlightDate:ok])</cols>
      </table>
      <simple-id uuid='{8FB5A2F5-B1F8-49A9-A182-259483354DDB}' />
    </worksheet>
    <worksheet name='Q2.3 Alaska'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Alaska</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0p8isfi146xkff1bxj4vi1pksxzi'>
            <column caption='Delayed vs On-Time' datatype='string' name='[Calculation_673851151189188608]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF INT([DepDelay]) &gt; 0 THEN &quot;Delayed&quot; &#13;&#10;Else &quot;On Time&quot; &#13;&#10;END' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='MY' name='[my:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_673851151189188608]' derivation='None' name='[none:Calculation_673851151189188608:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[my:FlightDate:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201801' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201802' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201803' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201804' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201805' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201806' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201807' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201808' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201809' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201810' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201811' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201812' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201901' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201902' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201903' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201904' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201905' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201906' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201907' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201908' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201909' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201910' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201911' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201912' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]'>
            <groupfilter function='member' level='[none:Calculation_673851151189188608:nk]' member='&quot;Delayed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]</column>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]</column>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[my:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Longitude (generated)]' field-type='quantitative' max='26677893.086446285' min='18935690.485964078' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Latitude (generated)]' field-type='quantitative' max='12339713.197090853' min='4995474.1609213352' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#fafafa00' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' />
              <lod column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]' />
              <geometry column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk] * [federated.0p8isfi146xkff1bxj4vi1pksxzi].[Latitude (generated)])</rows>
        <cols>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='119'>
            <formatted-text>
              <run>Alaska&#10;48.69</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='22708108.036342867'>
                  <node-reference>
                    <axis>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Longitude (generated)]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='9735374.7095571551'>
                  <node-reference>
                    <fields>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Delayed&quot;</bucket>
                    </multibucket>
                    <axis>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Latitude (generated)]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
                <projection name='EPSG:3857' u='-156.00959477515869' v='65.477830389941474' />
              </visual-coordinate>
            </point>
            <body x='-50' y='-41' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{595F2DAD-21C8-40B5-A26A-5FD39828BC23}' />
    </worksheet>
    <worksheet name='Q2.3 Cont. US'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Depature Delay (Minutes) in the US by State</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontsize='8'> This next visual is a Geographical heatmap of the US and a few of its territories, where we can observe the overall Average Depature Delay in minutes, by state. Note, this visual does not break up the Average Depature Delay, by quarter or year, but is rather the total average of Average Depature Delays for all flights between 2018 &amp; 2019.</run>
            <run>Æ&#10;&#10;</run>
            <run bold='false' fontcolor='#000000' fontsize='8'>The top four states for highest Average Depature Delay on this map are Wyoming (61.98min.), North Dakota (59.07 min.), South Dakota (58.51 min.) &amp; West Virginia (56.08 min.). Although the order has changed some and we have the added addition of South Dakota, this heatmap is showing a similar pattern in the amount of Average Depature Delay by states as we saw in the prior crosstab heatmap. Moreover, based on this geographical map we see the largest concentration of Average Depature Delay in the northern mid-west portion of the US. </run>
            <run>Æ&#10;&#10;</run>
            <run bold='false' fontcolor='#000000' fontsize='8'>Also, note that Delaware does not have any flights data, which is not an error. In fact, this lack of flights data is due to Delaware not having a major/international airport within its territory. It is a small enough state, that its residents can drive to a neighboring state and flight out of their international airports. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0p8isfi146xkff1bxj4vi1pksxzi'>
            <column caption='Delayed vs On-Time' datatype='string' name='[Calculation_673851151189188608]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF INT([DepDelay]) &gt; 0 THEN &quot;Delayed&quot; &#13;&#10;Else &quot;On Time&quot; &#13;&#10;END' />
            </column>
            <column caption='Cancellation Reason' datatype='string' name='[CancellationReason]' role='dimension' type='nominal' />
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='MY' name='[my:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_673851151189188608]' derivation='None' name='[none:Calculation_673851151189188608:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[FlightDate]' derivation='Month-Trunc' name='[tmn:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Action (Cancellation Reason,MONTH(Flight Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_657941B4B6DD4B549F573EC92B38D9C3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[CancellationReason]' />
              <groupfilter function='level-members' level='[tmn:FlightDate:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[my:FlightDate:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201801' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201802' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201803' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201804' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201805' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201806' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201807' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201808' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201809' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201810' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201811' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201812' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201901' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201902' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201903' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201904' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201905' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201906' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201907' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201908' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201909' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201910' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201911' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201912' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]'>
            <groupfilter function='member' level='[none:Calculation_673851151189188608:nk]' member='&quot;Delayed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]</column>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]</column>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[my:FlightDate:ok]</column>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Action (Cancellation Reason,MONTH(Flight Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Longitude (generated)]' field-type='quantitative' max='32831256.114154376' min='24676920.723438654' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Latitude (generated)]' field-type='quantitative' max='6574390.4321406456' min='2117451.4971306734' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' value='Avg. Dep Delay (Min.)'>
              <formatted-text>
                <run>Avg. Dep Delay (Min.)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#e6e6e6' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' />
              <text column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' />
              <text column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]' />
              <lod column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]' />
              <geometry column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Latitude (generated)]</rows>
        <cols>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run>Despite having airports, there appears to be no flight data for Delaware.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='31761476.78034804'>
                  <node-reference>
                    <axis>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Longitude (generated)]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='4637031.4827844743'>
                  <node-reference>
                    <fields>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Delayed&quot;</bucket>
                    </multibucket>
                    <axis>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Latitude (generated)]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
                <projection name='EPSG:3857' u='-74.681799620060701' v='38.406645178250997' />
              </visual-coordinate>
            </point>
            <body x='114' y='46' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{985ADA04-612A-4273-9B16-9B02CF25B772}' />
    </worksheet>
    <worksheet name='Q2.3 Hawaii'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hawaii</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0p8isfi146xkff1bxj4vi1pksxzi'>
            <column caption='Delayed vs On-Time' datatype='string' name='[Calculation_673851151189188608]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF INT([DepDelay]) &gt; 0 THEN &quot;Delayed&quot; &#13;&#10;Else &quot;On Time&quot; &#13;&#10;END' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[DepDelay]' derivation='Avg' name='[avg:DepDelay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='MY' name='[my:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_673851151189188608]' derivation='None' name='[none:Calculation_673851151189188608:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[my:FlightDate:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201801' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201802' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201803' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201804' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201805' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201806' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201807' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201808' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201809' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201810' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201811' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201812' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201901' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201902' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201903' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201904' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201905' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201906' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201907' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201908' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201909' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201910' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201911' />
              <groupfilter function='member' level='[my:FlightDate:ok]' member='201912' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]'>
            <groupfilter function='member' level='[none:Calculation_673851151189188608:nk]' member='&quot;Delayed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]</column>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]</column>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[my:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Longitude (generated)]' field-type='quantitative' max='23430708.004413161' min='21844091.193843916' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Latitude (generated)]' field-type='quantitative' max='2963200.4557071649' min='1488075.6842612468' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_1' value='#fafafa00' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' />
              <lod column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]' />
              <geometry column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk] * [federated.0p8isfi146xkff1bxj4vi1pksxzi].[Latitude (generated)])</rows>
        <cols>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='106'>
            <formatted-text>
              <run>Hawaii&#10;50.62</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='22656705.470125165'>
                  <node-reference>
                    <axis>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Longitude (generated)]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2373138.0602645157'>
                  <node-reference>
                    <fields>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Delayed&quot;</bucket>
                    </multibucket>
                    <axis>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Latitude (generated)]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
                <projection name='EPSG:3857' u='-156.47135188392195' v='20.842750067772123' />
              </visual-coordinate>
            </point>
            <body x='-33' y='33' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{EEB4C779-154D-46E7-9A8C-2975E8C0A725}' />
    </worksheet>
    <worksheet name='Q2.4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Flight Cancellation by Reason for 2018 &amp; 2019</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontsize='10'>2.4 How do the reasons reported for flight cancellation vary by month? Visualize the total number of cancelled flights for each month in both years broken down by the reason for cancellation. What trends do you notice about the flights cancelled?</run>
            <run>Æ&#10;&#10;</run>
            <run bold='false' fontcolor='#000000' fontsize='10'>There are four primary categories that cancellation reasons fall into and in this line graph we see the amount of cancellations, grouped by categories, as they vary MoM for 2018 &amp; 2019. A notable trend is that security as a cancelllation reason, only spans Sept. 2018 - Nov. 2019. Moreover, the line for Security is flat due to the cancellation count being so low when compared to the other cancellation reasons that they flattened any visible trends in the Security line.  On another note, it appears that Carier and Weather are the two most common reasons for flight cancellations. Additoinally, they show very similar trends in cancellation count MoM. However, Weather has more frequent and sharper peaks, which is likely due to the impacts of the inherent high-variablity of weather events as it is difficult to control or predict their intensity, geograhpical range and duration. The National Air System cancellation count is relatively low when compared to Carrier and Weather. However, its two notable peaks in July 2018 &amp; June 2019, mirror those of Carrier, just at a significantly lower count. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' />
          </datasources>
          <datasource-dependencies datasource='federated.0p8isfi146xkff1bxj4vi1pksxzi'>
            <column caption='Cancellation Reason' datatype='string' name='[CancellationReason]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cancelled]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='flights' datatype='integer' name='[__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='flights' datatype='table' name='[__tableau_internal_object_id__].[flights_7AB16370439C4FD5960A4132701DB767]' role='measure' type='quantitative' />
            <column-instance column='[Cancelled]' derivation='Attribute' name='[attr:Cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CancellationReason]' derivation='None' name='[none:CancellationReason:nk]' pivot='key' type='nominal' />
            <column-instance column='[FlightDate]' derivation='Month-Trunc' name='[tmn:FlightDate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[attr:Cancelled:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:CancellationReason:nk]'>
            <groupfilter from='&quot;Carrier&quot;' function='range' level='[none:CancellationReason:nk]' to='&quot;Weather&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:qk]' included-values='in-range'>
            <min>#2018-01-01 00:00:00#</min>
            <max>#2019-11-20 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[attr:Cancelled:qk]</column>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:CancellationReason:nk]</column>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:CancellationReason:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</rows>
        <cols>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Cancellation Reason: </run>
              <run><![CDATA[<[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:CancellationReason:nk]>
]]></run>
              <run fontcolor='#787878'>Count of flights: </run>
              <run><![CDATA[<[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:CancellationReason:nk]</field>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>5375</value>
                    <value>&quot;Carrier&quot;</value>
                    <value>#2019-03-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Cancellation Reason: </run>
              <run><![CDATA[<[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:CancellationReason:nk]>
]]></run>
              <run fontcolor='#787878'>Count of flights: </run>
              <run><![CDATA[<[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[__tableau_internal_object_id__].[cnt:flights_7AB16370439C4FD5960A4132701DB767:qk]</field>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:CancellationReason:nk]</field>
                      <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>4672</value>
                    <value>&quot;Weather&quot;</value>
                    <value>#2019-01-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-79' y='-46' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{C806A220-EAA4-47E5-8AB5-014C2FBF6ACE}' />
    </worksheet>
    <worksheet name='Q3.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Flight Air Time vs Average Distance Traveled</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontsize='8'>3.1 How are flight times and distances related to one another? Create a scatter plot of average flight time vs average distance traveled on the airport level. What is the approximate range of flight times in which most flights in this dataset tend to lie? Include a trend line and comment on what this represents. Are there any outliers?</run>
            <run>Æ&#10;&#10;</run>
            <run bold='false' fontcolor='#000000' fontsize='8'>The scatter plot shown, plots all the airports based on their Average Flight Air Time and  Average Distance Traveled.  You will notice the density of where most of the plot points are clustered are found where the Average Flight Air Time is between 26min. - 127min. and the Average Distance Traveled is between 106mi. - 949mi.. Any points with an Average Flight Air Time and/or Average Distance Traveled greater than the previously mentioned ranges appear to become less clusters as the space between each point grows as we move along the higher values of each axis. Some of the largest airports (Ex. JFK, Miami, Logan) tend to stray from the clusters as they are some of the largest, most frequented hubs for international flights. The trendline depicted, confirms that there is a strong relationship between Average Flight Air Time and Average Distance Traveled, which makes sense, since the longer the distance traveled by a plane, the more time is needed to travel that distance. Some notable outliers are any airports located in Hawaii and Alaska, which can be seen plotted in the upper-right hand corner of the plot and are the furtherst points from the cluster mentioned ealier. This is because these states are the most remote states as they are not part of the contiential US. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' />
          </datasources>
          <datasource-dependencies datasource='federated.0p8isfi146xkff1bxj4vi1pksxzi'>
            <column caption='Air Time' datatype='integer' name='[AirTime]' role='measure' type='quantitative' />
            <column caption='Airport Name' datatype='string' name='[AirportName]' role='dimension' type='nominal' />
            <column datatype='real' name='[Distance]' role='measure' type='quantitative' />
            <column-instance column='[AirTime]' derivation='Avg' name='[avg:AirTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance]' derivation='Avg' name='[avg:Distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AirportName]' derivation='None' name='[none:AirportName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:AirTime:qk]' scope='cols' value='Avg. Air Time (Minutes)' />
            <format attr='title' class='0' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:Distance:qk]' scope='rows' value='Avg. Distance (Miles)' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]' />
              <lod column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:Distance:qk]</rows>
        <cols>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:AirTime:qk]</cols>
      </table>
      <simple-id uuid='{FDC28785-1574-4BF9-B864-58172FBED63E}' />
    </worksheet>
    <worksheet name='Q3.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>YoY % Changes in Distance Flown &amp; Number of Planes in Serivce by Airline</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontsize='10'>3.2 How do the three carriers compare year-over-year in terms of total distance flown and total number of planes in service? Use the &quot;Year over year growth&quot; quick table calculation to visualize the percent change in total distance flown and total unique tail numbers in 2019 vs 2018. Describe the differences between the three carriers.</run>
            <run>Æ&#10;&#10;</run>
            <run bold='false' fontcolor='#000000' fontsize='10'>This barchart shows the year-over-year (YoY) changes in Distance Flown &amp; the Number of Planes in Serivce for each airline. Of the the airlines, Delta has shown to have the most significant increase in Distance Flown &amp; the Number of Planes in Serivce at 4.444% &amp; 5.564% respectively. This observation is also supported by the increase in flight count YoY found in Q1.1. For American Airlines, we still see an increase in Distance Flown &amp; the Number of Planes in Serivce, but at a significantly smallere amount than Delta. Southwest, Airlines, had the lowest increasee in Distance Flown &amp; had the only decrease in Number of Planes in Serivce among all the airlines. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' />
          </datasources>
          <datasource-dependencies datasource='federated.0p8isfi146xkff1bxj4vi1pksxzi'>
            <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
            <column datatype='real' name='[Distance]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column caption='Tail Number' datatype='string' name='[Tail_Number]' role='dimension' type='nominal' />
            <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tail_Number]' derivation='CountD' name='[pcdf:ctd:Tail_Number:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]' ordering-field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[FlightDate]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Distance]' derivation='Sum' name='[pcdf:sum:Distance:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]' ordering-field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[FlightDate]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:FlightDate:ok]' />
              <groupfilter function='member' level='[yr:FlightDate:ok]' member='2018' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' value='178' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[pcdf:ctd:Tail_Number:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' />
              <text column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[pcdf:ctd:Tail_Number:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[pcdf:sum:Distance:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' />
              <text column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[pcdf:sum:Distance:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0p8isfi146xkff1bxj4vi1pksxzi].[pcdf:ctd:Tail_Number:qk] + [federated.0p8isfi146xkff1bxj4vi1pksxzi].[pcdf:sum:Distance:qk])</rows>
        <cols>([federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok] / [federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk])</cols>
      </table>
      <simple-id uuid='{BD8AA057-3F2D-4530-9835-276A02C3D347}' />
    </worksheet>
    <worksheet name='Q3.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg. Distance Traveled Per Plane by Airline</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='false' fontcolor='#000000' fontsize='10'>3.3 Create a calculated field to show the average distance traveled per plane using the SUM() and COUNTD() functions. How do carriers compare in this respect? Visualize the average broken down by airline. Now, imagine we want to start thinking about carrier profits, even though we have no data on costs or revenue. Which airline do you believe is the most efficient in terms of costs per mile flown and why?</run>
            <run>Æ&#10;&#10;</run>
            <run bold='false' fontcolor='#000000' fontsize='10'>This barchart shows the Avg. Distance Traveled Per Plane, by Airline. Let us consider the Avg. Distance Traveled by each plane has a direct correlation with the cost needed to repair/maintain each plane. If we see an increase in Avg. Distance Traveled Per Plane, we should then find that each plane will require more repairs/maintainanence and the expense associated with these repairs/maintainanence. Based on this barchart and the logic above, Delta is the most cost efficent airline of the three, as they have the lowest Avg. Distance Traveled Per Plane.   </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' />
          </datasources>
          <datasource-dependencies datasource='federated.0p8isfi146xkff1bxj4vi1pksxzi'>
            <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
            <column caption='Average Distance by Unique Plane' datatype='real' name='[Calculation_235031664451280897]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Distance])/COUNTD([Tail_Number])' />
            </column>
            <column datatype='real' name='[Distance]' role='measure' type='quantitative' />
            <column caption='Tail Number' datatype='string' name='[Tail_Number]' role='dimension' type='nominal' />
            <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_235031664451280897]' derivation='User' name='[usr:Calculation_235031664451280897:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[usr:Calculation_235031664451280897:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[usr:Calculation_235031664451280897:qk]' scope='rows' value='Average Distance by Unique Plane (Miles)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' value='178' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' />
              <text column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[usr:Calculation_235031664451280897:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[usr:Calculation_235031664451280897:qk]</rows>
        <cols>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</cols>
      </table>
      <simple-id uuid='{A9AE5442-A633-4C21-BEEA-C1E204E5BF71}' />
    </worksheet>
    <worksheet name='Q4.Extra_Vis'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Flight Cancellation Count for 2018 &amp; 2019</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>This line graph shows the Flight Cancellation Count MoM for 2018 &amp; 2019. You will see the count of cancellation to peak during the Spring months and times of year where flights are most impacted by weather as seen in Q2.4.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0p8isfi146xkff1bxj4vi1pksxzi'>
            <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
            <column caption='Cancellation Reason' datatype='string' name='[CancellationReason]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cancelled]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cancelled]' derivation='Sum' name='[sum:Cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='Month-Trunc' name='[tmn:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FlightDate]' derivation='Month-Trunc' name='[tmn:FlightDate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Action (Cancellation Reason,MONTH(Flight Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_657941B4B6DD4B549F573EC92B38D9C3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[CancellationReason]' />
              <groupfilter function='level-members' level='[tmn:FlightDate:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]'>
            <groupfilter function='level-members' level='[none:AirlineName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:FlightDate:ok]' member='2018' />
              <groupfilter function='member' level='[yr:FlightDate:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</column>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]</column>
            <column>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Action (Cancellation Reason,MONTH(Flight Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[sum:Cancelled:qk]' value='56' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[sum:Cancelled:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[sum:Cancelled:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[sum:Cancelled:qk]</rows>
        <cols>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:qk]</cols>
      </table>
      <simple-id uuid='{DD0E8E86-61BB-4594-8AB8-9CCE483C0621}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Air_Traffic_Story' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>Air Traffic Analysis Across 2018 &amp; 2019</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='font-weight' value='bold' />
          <format attr='color' value='#000000' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='523' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='7' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4253' id='8' type-v2='title' w='98426' x='787' y='830'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='94087' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='5083'>
              <zone fixed-size='406' h='42116' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5083' />
              <zone h='51971' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='47199'>
                <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Introduction: &#10;For this story we will be exploring flight data for 2018 &amp; 2019 with a focus on the performance of varying airlines as well as airports operating in the US.&#10;&#10;Q1.1 Total Number of Flights 2018 vs 2019 by Airline&#10;This visualization shows the count of flights for each airline for the years 2018 &amp; 2019. It can be observed that all three airlines tend to have the same trends when observing the flight counts between 2018 and 2019 in that they all saw an increase in flight counts from 2018 to 2019. Despite all the airlines having this year over year upward trends, Southwest Airlines has a significantly higher flight count compared to Delta and American Airlines. For example Southwest had over ~420,000 more flights than its competitiors in 2018. However, that gap starts to narrow in 2019 with  Southwest still leading its competitors, but at the lower value of  ~394,000. Delta and American Airline seem to have a very similar count in flights, but Delta has a slightly higher amount. As for their year over year changes, Delta saw an increase of ~42,000 flights while American only saw an increase of ~30,000 flights.' captured-sheet='Q 1.1' id='1' />
                    <story-point caption='Q1.2 MoM Flight Count by Airline in 2018 &amp; 2019 &#10;&#10;Now that we have explored the total flights across each airline in 2018 &amp; 2019, let us go a step furuther and dissect the flight count for each airline as they vary month over month (MoM) in 2018 &amp; 2019. The line graph below shows that each of the airlines show a very similiar pattern of peaks and valleys as we analyze the flight count on a monthly basis. Ex. For February, in both 2018 &amp; 2019, appear to be the lowest valley/low-point for all 3 airlines. Which makes sense as this is typically a low performing period in the retail and commercial spaces as consumers are still dealing with fatigue from the recent holidays expendatures. All the airlines see a strong rebound in March for both years, which happens to be a month where most Spring breaks occur. Additionally, all airlines appear to show an increase flights or strong number over the summer months for both years consistent with increase in vacations that are taken during the summer. ' captured-sheet='Q 1.2' id='2' />
                    <story-point caption='Q1.3 Top 10 Origin Airports Based on Number of Flights &amp; by Airline&#10;&#10;After having looked at the MoM trends of flight count in 2018 &amp; 2019, let us take a look at how each airline distrbutes their flights across the Top 10 Origin Airports for those years. The first thing you may notice is that not all airlines have flights out of  each origion airports For example American Airlines does not have any flights out of Chicago Midway Int., while Southwest Airlines has not flights out of Dalles/Fort Worth Int. However, Delta Airlines does have flights out of all top ten origin airports. The next thing to make note of the distribution of flights across each origin airports. Delta Airlines has the majority of their flights coming out of the 3/10 origin airports with their top 2 airports (Atlanta Int. &amp; Minneapolis Int. ) have flights numbering in 6-digits. American Airlines shows a similar pattern as Delta Airlines in Dallas Forth Worth Int &amp; Charlotte Douglass Int. Southwest Airlines appears to distribute their flights more evenly across ther origin airports, keepign the range betwen ~81,000 - ~161,000 for 7/10 of the origin airports. The remaining 3 aiprots have less than ~16,200 flights or no flights at all for Southwest Airlines. ' captured-sheet='Q 1.3' id='3' />
                    <story-point caption='Q2.1 On-Time vs Delayed Flights for 2019&#10;&#10;In the previous graphs and charts we explored the flight counts for 2018 &amp; 2019 by year, by airline and as granular as the distribution of flights for each airline across the Top Ten Origin Airports. However, in this line graph we will explore more of timeliness of flights, specifically for the year 2019. This line graph shows two trend lines that show the distrbution of on-time flights vs delayed flights. Both trends show an inverse pattern of movement MoM, where the peaks in delays occur in the same month as the valleys in on-time flight, which is a pattern we expect to see. Addtionally, the highest amount of delayed flights took place in June. at 129,655 flights, where as the lowest amount of delay flights was found to be in September, at 79,689 flights. ' captured-sheet='Q2.1' id='4' />
                    <story-point caption='Q2.2 Quarterly Average Departure Delay (Minutes) by State for 2018 &amp; 2019&#10;&#10;After having explored the MoM trends of depature delays for 2019, our next analysis will be of the distrbution of Average Departure Delay, in minutes, across each state for each quarter in 2018 &amp; 2019. This highlight table (crosstab) operates like a heatmap in that the color/shade of blue will grow in intensity/darkness as the Average Departure Delay increases. Using the quarters that show an Average Departure Delay of 90 minutes or more as a baseline, it can be determined that the following 3 states have the highest Average Departure Delay, of all states, across each quarter: North Dakota (103.92 min,, Q3 2018), West Virgina (98.06 min., Q4 2018) &amp; Wyoming (98.06 min., Q1 2019). This is likley due to the eventful hurricane season that spans Q3 2018 &amp; Q4 2018 followed by the snow/ice events that typically occurs between Q4 and Q1 of the following year. Keep in mind that hurricanes impacting the tropics will delay the arrival of planes needed in those states, which subsequently delay flights coming out of the those states. Q1 2019 is particulary remarkable as the three states mentioned prior, all experienced Average Departure Delay at ranging between 84 min &amp; 91 min., which is the most narrowest range with the most significant delay seen for these three states across all quarters in 2018 &amp; 2019.' captured-sheet='Q2.2' id='5' />
                    <story-point caption='Q2.3 Average Depature Delay (Minutes) in the US by State&#10;&#10;The previous visualizations showed a crosstab heatmap of quarterly Average Depature Delay in 2018 &amp; 2019 by state. This next visual is a Geographical heatmap of the US and a few of its territories, where we can observe the overall Average Depature Delay in minutes, by state. Note, this visual does not break up the Average Depature Delay, by quarter or year, but is rather the total average of Average Depature Delays for all flights between 2018 &amp; 2019.&#10;&#10;The top four states for highest Average Depature Delay on this map are Wyoming (61.98min.), North Dakota (59.07 min.), South Dakota (58.51 min.) &amp; West Virginia (56.08 min.). Although the order has changed some and we have the added addition of South Dakota, this heatmap is showing a similar pattern in the amount of Average Depature Delay by states as we saw in the prior crosstab heatmap. Moreover, based on this geographical map we see the largest concentration of Average Depature Delay in the northern mid-west portion of the US. &#10;&#10;Also, note that Delaware does not have any flights data, which is not an error. In fact, this lack of flights data is due to Delaware not having a major/international airport within its territory. It is a small enough state, that its residents can drive to a neighboring state and flight out of their international airports. ' captured-sheet='Q2.3' id='6'>
                      <capturedDeltas>
                        <worksheet name='Q2.3 Cont. US'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Latitude (generated)]' field-type='quantitative' max='7267707.7299114773' min='1950985.4972950714' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[Longitude (generated)]' field-type='quantitative' max='33055410.962617993' min='25925006.576753221' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Q2.4 Flight Cancellation by Reason for 2018 &amp; 2019&#10;&#10;The last three visulalizations have explored flight delays. Next we will explore flight cancellations and their reasons for cancellation. There are four primary categories that cancellation reasons fall into and in this line graph we see the amount of cancellations, grouped by categories, as they vary MoM for 2018 &amp; 2019. A notable trend is that security as a cancelllation reason, only spans Sept. 2018 - Nov. 2019. Moreover, the line for Security is flat due to the cancellation count being so low when compared to the other cancellation reasons that they flattened any visible trends in the Security line.  On another note, it appears that Carier and Weather are the two most common reasons for flight cancellations. Additoinally, they show very similar trends in cancellation count MoM. However, Weather has more frequent and sharper peaks, which is likely due to the impacts of the inherent high-variablity of weather events as it is difficult to control or predict their intensity, geograhpical range and duration. The National Air System cancellation count is relatively low when compared to Carrier and Weather. However, its two notable peaks in July 2018 &amp; June 2019, mirror those of Carrier, just at a significantly lower count. ' captured-sheet='Q2.4' id='7' />
                    <story-point caption='Q3.1 Average Flight Air Time vs Average Distance Traveled&#10;&#10;We have analyzed flight counts, departure delays, and cancellastions. Next we shall look at the Average Flight Air Time and Average Distance Traveled. The scatter plot shown, plots all the airports based on their Average Flight Air Time and  Average Distance Traveled.  You will notice the density of where most of the plot points are clustered are found where the Average Flight Air Time is between 26min. - 127min. and the Average Distance Traveled is between 106mi. - 949mi.. Any points with an Average Flight Air Time and/or Average Distance Traveled greater than the previously mentioned ranges appear to become less clusters as the space between each point grows as we move along the higher values of each axis. Some of the largest airports (Ex. JFK, Miami, Logan) tend to stray from the clusters as they are some of the largest, most frequented hubs for international flights. The trendline depicted, confirms that there is a strong relationship between Average Flight Air Time and Average Distance Traveled, which makes sense, since the longer the distance traveled by a plane, the more time is needed to travel that distance. Some notable outliers are any airports located in Hawaii and Alaska, which can be seen plotted in the upper-right hand corner of the plot and are the furtherst points from the cluster mentioned ealier. This is because these states are the most remote states as they are not part of the contiential US. ' captured-sheet='Q3.1' id='8' />
                    <story-point caption='Q3.2 YoY % Changes in Distance Flown &amp; Number of Planes in Serivce by Airline&#10;&#10;After having looked at the Average Flight Air Time &amp; Average Distance Traveled for planes flight out of varying international airports in the US. Next we shall analyze this barchart that displays the year-over-year (YoY) changes in the Distance Flown &amp; the Number of Planes in Serivce for each airline. Of the the airlines, Delta has shown to have the most significant increase in Distance Flown &amp; the Number of Planes in Serivce at 4.444% &amp; 5.564% respectively. This observation is also supported by the increase in flight count YoY found in Q1.1. For American Airlines, we still see an increase in Distance Flown &amp; the Number of Planes in Serivce, but at a significantly smallere amount than Delta. Southwest, Airlines, had the lowest increasee in Distance Flown &amp; had the only decrease in Number of Planes in Serivce among all the airlines. ' captured-sheet='Q3.2' id='9' />
                    <story-point caption='Q3.3 Avg. Distance Traveled Per Plane by Airline&#10;&#10;We&apos;ve looked year-over-year (YoY) changes in the Distance Flown &amp; the Number of Planes in Serivce for each airline. Now we shall review the Avg. Distance Traveled Per Plane by Airline. This barchart shows the Avg. Distance Traveled Per Plane, by Airline. Let us consider the Avg. Distance Traveled by each plane has a direct correlation with the cost needed to repair/maintain each plane. If we see an increase in Avg. Distance Traveled Per Plane, we should then find that each plane will require more repairs/maintainanence and the expense associated with these repairs/maintainanence. Based on this barchart and the logic above, Delta is the most cost efficent airline of the three, as they have the lowest Avg. Distance Traveled Per Plane.   ' captured-sheet='Q3.3' id='10' />
                    <story-point caption='Q4.0  Flight Cancellation Count for 2018 &amp; 2019&#10;&#10;In Q2.4 we observed the count of flights cancelled by reason. For this next visual we will look at the count of cancelled flights over time from &#10;2018 - 2019. This line graph shows the Flight Cancellation Count MoM for 2018 &amp; 2019. You will see the count of cancellation to peak during the Spring months and times of year where flights are most impacted by weather as seen in Q2.4.&#10;' captured-sheet='Q4.Extra_Vis' id='12' />
                    <story-point caption='Q4.0  Dashboard&#10;&#10;This Dashboard provdes us with an excellent summary overview of flight cancellations,  their reasons MoM as well as the average depature delay (in minutes) for each state. You can use this Dashboard to determine what month you may want to take any flights in and what state you may be wanting to flight into/out off. Based on this Dashboard you may want to consider avoiding flight during the Spring as this is the season we see the highest amount of Carrier &amp; Weather related cancellations. Moreover, if you use the filter in the Flight Cancellation Count line graph, you will find Delta Airlines to be the most reliable airline as they show the lowest amount of cancellations. Finally, you may want to avoid airports of  states found in  the northern midwest part of the US as well as West Virginia, as these states experencing the longest and most frequent delays. &#10;&#10;In short, avoid Spring flights, avoid airports in the northern midwest states and fly with Delta Airlines.&#10;' captured-sheet='Q4.Dashboard' id='11' />
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{D881B16D-7C75-4548-B516-4880B65123FB}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Q2.3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' name='Q2.3 Cont. US' show-caption='true' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='18875' id='10' name='Q2.3 Hawaii' show-title='false' w='16700' x='24200' y='59125' />
        <zone h='25500' id='9' name='Q2.3 Alaska' show-title='false' w='21500' x='2000' y='52500' />
        <zone h='9500' id='8' name='Q2.3 Cont. US' pane-specification-id='0' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' type-v2='color' w='14000' x='84000' y='51250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='122' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='121' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Q2.3 Cont. US' show-caption='true' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9500' id='8' name='Q2.3 Cont. US' pane-specification-id='0' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' type-v2='color' w='14000' x='84000' y='51250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='204' h='25500' id='9' is-fixed='true' name='Q2.3 Alaska' show-title='false' w='21500' x='2000' y='52500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='151' h='18875' id='10' is-fixed='true' name='Q2.3 Hawaii' show-title='false' w='16700' x='24200' y='59125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F46AF1B6-4A0F-4A5A-899D-0550BFB12C15}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Q4.Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Air Traffic Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='flights+ (airtraffic)' name='federated.0p8isfi146xkff1bxj4vi1pksxzi' />
      </datasources>
      <datasource-dependencies datasource='federated.0p8isfi146xkff1bxj4vi1pksxzi'>
        <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
        <column caption='Cancellation Reason' datatype='string' name='[CancellationReason]' role='dimension' type='nominal' />
        <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
        <column-instance column='[CancellationReason]' derivation='None' name='[none:CancellationReason:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
        <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97250' id='106' param='horz' type-v2='layout-flow' w='97800' x='1100' y='1375'>
            <zone h='97250' id='88' param='vert' type-v2='layout-flow' w='97800' x='1100' y='1375'>
              <zone h='5125' id='89' type-v2='title' w='97800' x='1100' y='1375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='92125' id='65' param='horz' type-v2='layout-flow' w='97800' x='1100' y='6500'>
                <zone h='92125' id='61' type-v2='layout-basic' w='97800' x='1100' y='6500'>
                  <zone h='92125' id='16' param='horz' type-v2='layout-flow' w='57838' x='1100' y='6500'>
                    <zone h='92125' id='14' type-v2='layout-basic' w='57838' x='1100' y='6500'>
                      <zone h='46065' id='10' name='Q2.4' w='57838' x='1100' y='52560'>
                        <layout-cache cell-count-w='24' minheight='432' non-cell-size-w='133' type-h='scalable' type-w='cell' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='46060' id='92' name='Q2.3 Cont. US' w='57838' x='1100' y='6500'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='92125' id='13' name='Q4.Extra_Vis' show-caption='true' w='39962' x='58938' y='6500'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='13500' id='66' name='Q2.4' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:CancellationReason:nk]' type-v2='filter' values='database' w='11000' x='7700' y='58250' />
        <zone h='14125' id='70' name='Q4.Extra_Vis' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' type-v2='filter' values='database' w='10200' x='65100' y='12000' />
        <zone h='9500' id='95' name='Q2.3 Cont. US' pane-specification-id='0' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' type-v2='color' w='14000' x='2300' y='41500' />
        <zone h='19750' id='98' name='Q2.3 Cont. US' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]' type-v2='filter' values='cascading' w='9500' x='2200' y='19875' />
        <zone h='11250' id='107' name='Q4.Extra_Vis' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]' type-v2='filter' values='database' w='7600' x='66200' y='77375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>Air Traffic Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='153' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='152' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5125' id='89' type-v2='title' w='97800' x='1100' y='1375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19750' id='98' mode='checkdropdown' name='Q2.3 Cont. US' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]' type-v2='filter' values='cascading' w='9500' x='2200' y='19875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46060' id='92' is-fixed='true' name='Q2.3 Cont. US' w='57838' x='1100' y='6500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9500' id='95' name='Q2.3 Cont. US' pane-specification-id='0' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' type-v2='color' w='14000' x='2300' y='41500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14125' id='70' mode='checkdropdown' name='Q4.Extra_Vis' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' type-v2='filter' values='database' w='10200' x='65100' y='12000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11250' id='107' mode='checkdropdown' name='Q4.Extra_Vis' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]' type-v2='filter' values='database' w='7600' x='66200' y='77375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92125' id='13' is-fixed='true' name='Q4.Extra_Vis' show-caption='true' w='39962' x='58938' y='6500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13500' id='66' mode='checkdropdown' name='Q2.4' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:CancellationReason:nk]' type-v2='filter' values='database' w='11000' x='7700' y='58250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46065' id='10' is-fixed='true' name='Q2.4' w='57838' x='1100' y='52560'>
                  <layout-cache cell-count-w='24' minheight='432' non-cell-size-w='133' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='3' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{06C3C8C0-A202-407E-B4B9-0ED49408EA4F}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Q 1.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='173'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B02D846-FE02-4E39-B554-E16B18C6A988}' />
    </window>
    <window class='worksheet' name='Q 1.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='157'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[mn:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:qk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C32CBD0B-50BD-4AFB-A353-D4933C2BFAD3}' />
    </window>
    <window class='worksheet' name='Q 1.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='216'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='237'>
            <card pane-specification-id='0' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportID:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:OriginAirportID:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C7C0A23-C123-4750-A85C-0C89F19052A4}' />
    </window>
    <window class='worksheet' name='Q2.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='175'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[qr:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:qk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[usr:Calculation_673851151189188608:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0002DDC9-DCAF-4EC2-95AF-2E049551E0F7}' />
    </window>
    <window class='worksheet' name='Q2.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='233'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[qr:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:qk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tqr:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[usr:Calculation_673851151189188608:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9ACB86FB-EE8A-4658-8224-DF511FC39D4C}' />
    </window>
    <window class='dashboard' name='Q2.3'>
      <viewpoints>
        <viewpoint name='Q2.3 Alaska'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q2.3 Cont. US'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q2.3 Hawaii'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5B74A069-6266-4C92-A9FD-901173EF6A9D}' />
    </window>
    <window class='worksheet' name='Q2.4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[attr:Cancelled:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:CancellationReason:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='202'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:CancellationReason:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B057868-C5F9-46A8-8994-66A6C5C3D17E}' />
    </window>
    <window class='worksheet' name='Q3.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='191'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AdhocCluster:2:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1CE45AA-32E5-4A60-8CED-55AAD9C41E29}' />
    </window>
    <window class='worksheet' name='Q3.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='172'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[:Measure Names]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirportName:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Tail_Number:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E82ED325-BE0F-46DB-994E-CE9855261B74}' />
    </window>
    <window class='worksheet' name='Q3.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='156'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Tail_Number:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A051A1E-2CCA-4B44-8480-9741199E805F}' />
    </window>
    <window class='worksheet' name='Q4.Extra_Vis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='74'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:CancellationReason:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Country:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[sum:Cancelled:qk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{228A534A-7097-4246-A1A8-D72AB9EBFAD0}' />
    </window>
    <window class='dashboard' maximized='true' name='Q4.Dashboard'>
      <viewpoints>
        <viewpoint name='Q2.3 Cont. US'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q2.4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q4.Extra_Vis'>
          <zoom type='entire-view' />
          <highlight field='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:AirlineName:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{3649173D-C6CE-4559-9C21-3786DBF1BBA9}' />
    </window>
    <window class='dashboard' name='Air_Traffic_Story'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{3FF4F558-8295-40C0-B5AC-178DFC2DF3D9}' />
    </window>
    <window class='worksheet' name='Q2.3 Cont. US'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[my:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[qr:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:qk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tqr:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[usr:Calculation_673851151189188608:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D540F8A8-0AE9-4DC1-ADD3-0DF13911B7A2}' />
    </window>
    <window class='worksheet' name='Q2.3 Alaska'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[my:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[qr:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:qk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tqr:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[usr:Calculation_673851151189188608:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2488C0C5-BC44-4619-B258-1613D9A31CB4}' />
    </window>
    <window class='worksheet' name='Q2.3 Hawaii'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[avg:DepDelay:qk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[my:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:Calculation_673851151189188608:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[none:State:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[qr:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tmn:FlightDate:qk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[tqr:FlightDate:ok]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[usr:Calculation_673851151189188608:nk]</field>
            <field>[federated.0p8isfi146xkff1bxj4vi1pksxzi].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BC66AD4-1F4E-43CA-917E-116C8EB99E08}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Air_Traffic_Story' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 1.1' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Q 1.2' width='192'>
      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
      8J+0VhD+Tc4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q 1.3' width='192'>
      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
      IgCFjuY/2mdlrs6rvdcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q2.1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2.2' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q2.3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2.3 Alaska' width='192'>
      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
      NgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q2.3 Cont. US' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2.3 Hawaii' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2.4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q3.1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q3.2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAclElEQVR4nO3dWXAc953Y8W93z4m5MQAG90WCl3iKkijKoihZkiVbiuzIjh1tVPFWKtnN
      8Z5UHlLltzylkkoqtXnZzUNix1sbr726LIkUTZEUD/AGiPu+r7nvmZ7pzoO0tBShhweAATD4
      f95m0NP4dU//5t///l+Srus6grBDyZsdgCBspg1NgGw2u5G7F4Q129AEyGQyG7l7QVgzcQu0
      AfrvXOP8hUuMjw4RjCRI5wtf/SXNyNAsALF4HIBMdJGPf/8xPUOT/H1lTM2mSOeK39pvbOoe
      Q8sZQOdu90XmQyni0SjFrz44NDJMNBJZNab5kXv0TS4xPDK0jke6/Zk2O4BKNDo5RcfuQ4Tn
      RoildZxuOzNjI/gbq7l17h7LsSP0dJ/lu2/+CbXyMr6WA0wNXsdjzjM0No9HXmEw3cizHXaW
      EzonTxzHJMO9qRAnTj2BVsgyOTXNcs5BwK5jskEON3OzYySjCcxKnmAkzd59XQwOjHLkxHMs
      js8zJC3i0bI4FI3B6RBtDS7GJpawW2XqOg4QmRrC2biLQ12tm30Ky0aUABtANttoamxAkSAV
      D9PX00P9ng5mx+YJtHYRX56npXMfu9vqv/yArqFpMDwwwOTdG5j8zezb18nF81+QSsZQi4Cu
      UtDNKEgklsaZi6iMDA+xsrjC1Mw0Hbs6AZ2VpWVml4IEnEUu/OE8K/EE8WQWkHii2cO9qQiD
      gwOM3bvO8OQC1U4r1Q0NjF6/zOe3J4hHY5t45spP2sjHoJFIBJ/Pt1G737Jm52ZpbmomvDSL
      igU1G+VXv/o/HHn+LQ52NAN5zHqGqOakzW/hSvcdOg8cQ8ksMbeUYt+hPQz2j9PgtzAXUXnq
      2GHiE3eYtbRzuMVLfGUBXAFSK7MUdAXFpFNX38ziwiySLqFLOk6LTEEyM9A/wBNPnkCPhbDX
      1zHU20e1Q2EloVJfX4fNZMJks5JMFgnNDmKt7WBfR+Nmn8KyEQlQBrquo2kasiwjSdJj7SMc
      CuL2+THJj/d5YXWiDlAGkiShKMqa9lHtr1mnaISvE3WALU7XisTjcQpFjUwqSU4toObzFDSd
      XCZNOpvb7BC3NVECbHHpeJjZ6SniOYlMRsVkkqk1J7C3P81U/x0UReHJEyexm8Vv2eMQZ22L
      s9rsxBM5WmpsuBo6MEkF3B4vKBaaAtWEIyGy+W+3GQgPRyTAFrcwNUJaU9Bt1RSWRrA6qwlF
      YszNzqDIMjWBZlx2UZA/LvEUSNjR7v90ZLPZde+7k0ql1nV/grDe7ieAzWbDZrOt+z8QJYCw
      lZWoA+To7xtF13XEiBmhUpWsBE8M3uHsZ5dRyxWNIJRZiQSQSQUTuPxOUQIIGyKTiBJP5wHQ
      dY2VlRUAIuEg+YJGNhUjlsqysrSAWtTIZNZ/gFWJBCiSjkfpH5lE9D4R1p1e4Pe//AvevzEK
      wMLQDf7jX/xP8skg//U//yfGVpL84f/+JX9z9jzv//Wvee+TS4zNR9c9jBIJYKJhTwvVLg9r
      68UiCN82cecC8zkzkVAInSK/+eg8flueD377G+w+H/cuf8pkXCIa12nf1Y6Umefi2Q+Yjq5v
      1w+DFhSVnhvXmAtmsSlLZAHHuv5bYaer7zrO67KF/pSbkdEJfvLTf8zFq5f5zqnTVPdcx9N2
      lBP7W+letHCgzUxKtnD+/BXMyvq23Ro0hGkkYmE++/3H5BQfP/pHb2B9jJ2LhjBhqzMoAWRc
      HhfFokxTS0DUAQRDN4cXyKuFB2+4yUyKzNP7mr79vvFHCji99ezb2ym6jAqG/vvfdhOKb/3Z
      P5x2C7/8D29/6/2SlWCbkufmrT62fn4LwuMp2Q5QE6gjtrIoEkCoWCUSQCcRi+GpC2AuXzyC
      UFYGCZDjDx99yvzKIndu9YmuEELFMqjfKtjtFuKalx//7DTr30dUELYGgwTQ0HQTHqeF+dk5
      Wtsbsay6nc5E3y0mkhLOfBRbTQtVVhu7OlvEo1NhWzBIABP7Dx+moOsgKYaPQbV8mmBaosoE
      DrODWDREUtfx1NTiqzKhaRqqKm6ghK1AX/VaNLi2i0yOjZBSi8hKFd6a6lUrC4V8HhmV2cUk
      R04fY24hyMzkOJFkhlq3D1mWMZtFFVrYCqRVr0WDBDBT21BLuHeQrKSiGezS4vRx/OkTHP/q
      9e6uanZ37VmXcAWhHAwfgza3thKZXySp5sT9vFCxSrQDFLCZTUQjScSsM0KlMrgFStHXs8Ib
      P/85qqoaPAEShO3PcDzAtc/PMTPfiKw4efHV50USCBXJIAEc/PCdn+CvcZc3GkEoM4MEKHCr
      +xy5opf9Bzpo29UmukQLFcmgEmzjqaePYjGpROJidjehchkkgISvto54KMxY/4DoDCdUrBJ3
      Nlb8NQ4yslNUgIWKVSIBJJ5/+XUkdNEQJlQswwSYHrnBmfMT+Nw2Xv/ZD6kqZ1SCUCaGLcE1
      DR0E/DZqW5rFLZBQsQwToMrpQDHb6WhtFLdAQsUqUQcw4bTByOgUdc0Nq06PqGs5em/3Es0V
      sRZT2GtasFut7O5sFUkjbAsl27fMZjPjExM8++Kzq/5dkiw47QoRVcZpdxKLhUgWNbw1tfiq
      zGJAjLCFPNKAmK8+out4q/2G90laPkkko6EXi+zu2s3sYoiZyXGiySy1brsYECNsIY80IObL
      D8RjYQqy23B2aNnq4vjx4/df79pdza7dXWsMVBDKp0QCFMnkJSQpQ6H0hoKwbZUsAZ44fAyT
      rIkKrVCxSibAUN8dCoqNpj27yxeRIJRRiQRQePF7ryGV3kgQtjXDa3v03iU+OjtKba2PH/2T
      t7GXMypBKBPDBGjfe5QX8vXUB1xiclyhYhl2hTCZLYwN9XL50jUxHkCoWCWmRbFQ41VQHF6x
      SqRQsUokQI5MwcnTTx4QCSBULMMEyOd1GgIe5uaXDKdGFITtzrASHA4uE1wJkZdtFEFUhIWK
      ZFgCZGLzDE8GSURjogQQKpZhCdDYvp+nj1tJqppoAxAqlmECWO1m7p7/BK3xCE+dAucq2+ha
      jp5bPSiuaky5GFV1rSjFAo1N9aL/kLAtGCZAIq7x2jvvouqScQkgmdmzp5OrdwexFlIsxXK4
      3G78gVpM6GJAjLCFPOKAmHQiyOfnLlDfeZDm9tbVh0QWUnx++S6nXjqFXS4wMjRIJB5mZDbM
      ofZaMSBG2EJWHxBjUAnOc/niDZ48eZLw0pxhJVjSFVpb61lYXKaoQdueg7S0tLG32b9+cQvC
      BjIoAXKkYhmGh4ZIhhPkAOsqW0mWKg4cOHD/tRloamndiDgFYUMYJICLd//8T8saiCBshhJd
      IVQ++/A9Pj1ziXz54hGEsiqZACvBJF6vWzzSFCqWYQLMzSzgtCtMTc2JRfKEimX4GLS+sY1X
      32pCR1q1AiwIlcCwBFAUiTO/+Tv6x8bEgBihYpWoA+SZG53gVs+g6AwnVKySs0K88s7PkNFL
      ZYkgbGslEkCnr+c2mmyhcU9n+SISAJ2ZkV4ieDnc1Uo+FeLTs19w/IXTDF65gLuhlfjSNI7G
      PejhKQIHnoZ0grZ2MSv3oyrx4y5jN+uY7S5xUjeBWZEYnxwFoPvyF+w9fpTPz5ynqbmRlYkB
      GusDDPReY2xknPNnzjG1EKao6Zsc9fZTsh0gElepD/hFApSdhNfnQ/rqxMsSFIsqelHD4vLg
      MeexubyoupXvvfEqbT6d8f5rXBwObW7Y21CJBLCxd28nVR6HGBRfbnqR27d7SUXjDAwPcfDp
      55nsG+KV104z1N+PvfUIQ0NDHD/+DFabi2OnXqezfTdPdfg2O/Jtp0QdIM2l9y7Q+eJxmnd1
      4FplC10vcO/GNRr2PU1wvBd7oA1TUaWxqUGUGmshKZz87vc5+bW3Xv/BDwB47Y23vnzjyJFv
      fOT0yy+XKbjKUiIBLOw/sRfZ5Vt1NNiXFGo8VhI5lUgkzFI8h8vlxl9Xh0kSA2Jyd++SvXR5
      s8N4KJ4/++dQ0WM3HnmFGI3J6WmabT5UMFgpUiefV8mrOs9853nGhgcJRSOMzoU5KAbEkFlc
      In316maH8VCq//xfIFf0d/XIK8RYOX78KdytLcYbaXmyihclF0XT/LR2HcK5vEBNgxgQI2wP
      JesAF9//A4ETh6l7qxHHKltIio29+/fff20GGptb1j1IQdgoBk+BMly7fJO6PR0EAk1iWhSh
      YhkkgAWvU6FgsmJBE92hhYplcAtUYHRkjHCwSF19LVutfXGk5yp3xmP88IevYZGg/9pnJNyd
      aPP9pKz1dFbr3BxY4vgTrfTNJTjWWYe3qROnRfRqEr7JIAGsnHr5dXbNRXF6jZdJ3SzXeid5
      breV6xNJTjQU6B0coSqQIJr1URUd5MKQxGtP1/JXv7+Bo0rCkg/RafLQ1VK72aELW4zhT2Iu
      k+bOjSsMj81uue7QUlElFE7jrDIxO9LLYiTBwMQSWjZJPquCVCAUSfDiD/8hLx7rYjmlcuf2
      lc0OW9iCDEqAPBfPX+bAsWP09Y+h81R5o3qAt77/IncmouxmiULHCf7NvzxKMKmSXZkibT1G
      uw+6B5c43eFi2bmP5sYAocJqbdnCTmeQAFmSkSwTExNkQjEyGDWEbQ5XbQunar/+uNVCvQ2o
      qb7/zosnGwEI1PkBPzVljVDYLgwSwM0//df/DF3X0DQ2pA5QmL1O/ov/tgF7Xn/mg29jfuJH
      mx2GsAEMEkAlFEoz3HONhYjKG2+/se4D4/VMlOL8rXXe68ZQ2k4+eCNhWzJIAIXg7CjpQoHq
      plbj1WF0nUhoGVOVFy0bx+zwgaZit9tFb1BhWzAsAQYGx6DKzf5GMwVWrwMUs2F6h2eR9REs
      uoZudVJX30R7i2g7FrYHgwSwcPI7zyA7a6j1GneG1rNJbL5GitEJGgK1LIeiTA73oJmfYVe9
      Z4NCFoT1Y5AAEoHm9gd+WPE0ogx1U+Vvoq7Og9lZjT4+gtNWyd1qhUpyPwF0XUfXH7XTg8Kx
      Z/5YQayrgrqaL7tCa5qGrn85KGY1ug6atD0SRUc2PI6Sn5MkdGWrtaOvTtN1eIxjVGQJRd76
      NT6TLK36HUr6V1d9Lpcjk8ms6z9NpVI4HKt1pBaEreF+CWC1WrFaH/Fhp66TzaQpSgqyXkSx
      2JB0DZPZjMSXpYrX613nkAVh/aype6RWSHH5yg1isSh3b1zjbk8f03Mr6xWbIGy4EiPCHkxL
      hYiki4xOztISqGMllmJ2cgizw0Wjz77jB8ULxvRCjoGhYdw1jTQH/KwsTLIYyrJ33y6mx8Zo
      bN+Nno2SoYp0eIH61k5y2TSudb6lXlMCKO4GWmtm0a02GpuasDjTzEyMIcsSJpNpxw+KF4yF
      Z27TOxnjtdZdmM1mzn16ludefoM75z4iV7ePJhm++PDXLHj3YZ4bw9J0gKNHDlPtXd/r6X4l
      eCNEIhF8PjFZk/BtydAMH396Ac3VwE/f/C6Xz35Az+Akum7CVW2loKoEl4Pk/Yc41SoRjseZ
      Xkzw5js/p6Patm5xrKkEEITHpRV1TFYznlo/w6NjyCYZp7eOkyf2c7W7h+PPv0KrPc2VWZ2u
      Go28zUH0sy9wWNf3khUlgLCjiRJAWJNLvdPk8oXNDuOBzCaFF460fet9kQDCmvzVh7cJxde3
      AXUjOO2WVRNATJMg7GgiAYQdTSSAsKOJBBB2NJEAwo4mEkDY0UQCCDuaSABhRxMJIOxoIgGE
      Ha1EAuT5X//lf3Dx+g2y5YtHEMqqZAmgyAXGphe33PoAgrBeSnSGK3L0u9/HSp4CGE+PKAjb
      WIkSwMzMeA99U3Pi4hcqVokEKJDPFrBZbFtuhRhBWC8lEkAnFos/cAdasUBeLZDP5SgUNQqF
      wpZbVE8QjJRcKf7gwT1ECxbjqc51neG715nNyjjyCUzeAF6Pj90dzRsRqyCsuxIJkOTG2W6q
      Dj1hWAlW02FmIzkwm6kN1BGKp1iYDmN3e6n32MS8QMIWoq96LZZIAAsv/uQtFhaXDe+TJJOd
      fV1tTC5EaG5pwRpJMjMxhqbrYl4gYYuRVr0WDRNg8PYXfHBmmI49nYYJYLJW0dzaQXNrBwAt
      Th8tLS0GWwvC1mOYAPuOPUc2a6N3IiwqtULFKvEUSGZsYIC6hjrxGFSoWIYJMDM1jbu2jnwq
      KRa8EyqWQQLo5OIREvkCgbbWLbVItiCsJ4MESDM0keSNN98gPTlCqrwxCULZGK4TbCHNuXPn
      KGgm0RtUqFgGCWDj1bfeRCsW0XREAggVq8RToAx/+6u/5sLFbkRbrlCpSiSAhCTrFArF8kUj
      CGVW4jHoDG63i3w+LxrChIpl2BLc0tZFS1tXOWMRhLIrcQtU5P3//Wtu9vWTL188glBWJWeF
      mB+b5NbdAdEVQqhYJbpDaxx5+TUsUl4kgFCxSpQAdtTsIstZlfVblFIQtpYSCZBjaSGCWZLZ
      +kugCcLjKd0OIGkUi+IGSKhcJYdEep0e6toCoju0ULFKlABZ+rrvcPX6HXELJFSsEiWAwgs/
      fovOfXsMK8G6rjE5MojF24CUCWP3NyEVsni8XlFqCNtCyYWyZ8aHWIkkOP3K86sPitFVPNX1
      9PTexmG1kJ8P0tDUhtvzZecJXdfRddGRQtgaVrsWSySATC6apW6Pu0RfIImh/l4OHDuBnA0z
      N7/I1HAPefkpuho86LpOsSg60wlbw2rXokECaOTzGUKLi8QHxzl65PCqW+m5FKpkJhgMsqvB
      S0unB0UZI+BzoCgKsixjMpUsZAShbFa7Fg2uzjxnP3gP3RegPVBveD8v2328cOq5+6+tQLX3
      2NojFYQyMUgAif2Hn8RTq3LgYHvpioIgbGMGj0FNzE8OcOPGNS5dvilGhAkVy3BQfNueI2Rz
      Q6gmMSJYqFyG8wKpySihZApfQ6OYF0ioWIbzAvWPxXn7x2+TmR4lXd6YBKFsDG6BZBQ1zscf
      f4yak0WrrlCxDBLAzutv/4hUPEw0XcRe3pgEoWwMboHy9PcO8MWFz/n8swvkyhuTIJSNQQlg
      BjWKbrbT+UQH1vLGJAhlY9gSPDW1iOyt50BLjVgou+x0eq6eZzpu4vVXT5FdHuF3527y5InT
      BEe6cdV1EF2ZYPfx7zLWfY6Gg88iZVJ07ekU9bVHZJAAVl598w0k2YSilBgyIGyMQpa7U3F2
      VeeYDuVQh+4RzdpocMb41eVJ3n33KHoSlmMJpicmGA+q1NcHaN/VjkV8X4/E8GyZzBZx8W8W
      SUZXc6SSOawWhYZDL/DO97r4ze8u0rZrF6albqwWCygOfvrun9BVJxFdHuPzweBmR77tiG4+
      W5Fi5bVTR5iOK+jRKfK2KrrvTvHjd/+U4OhtUiYXc4MDKNkh8p7dPHn6H2C9dZMj+2o2O/Jt
      RyTAFhVo20vga69/8IMGAHyHnwHgyIH939j+medOliu0iiISYAOlrlwh+cmZzQ7jodT++3+H
      bN15z/tEAmygYihMbnBws8N4ONrOnP5G1HKFHU0kgLCjiQQQdrS11QF0nbnpMWzeRgqJZWzV
      DVDI4Xa7RYuksC2sKQGK6WWmgir6TDcWxYw6u0Rjcydul35/KhXDeYF0DfRtMmWKJIP0GCPj
      ZBmU9R9Rp8OG/MA8zhxOJkXGpGz9nzuTIq16fJK+hpmrCrFpbs5KFOOz7GqtZ2FxhVA4TPOB
      Z9hd7yEajeJ2u1f9rDpyhuIn//Zx/3VZSU/9GdZn/9VDb/+gUypJj3/B6LpOoVDAbH703lkP
      81U/bmwbue+H2f/j7ntNJYDibsKRu4W1sQ2v14GpyocsjVLr+eO8QEZflNL+LNpP/nIt/75s
      ZHcz8mNccBvFYhGDVNfLmkqAB4lEIvh8vo3avSCs2bZ9CjQ/NUYkmQVAzSZZDsbQCjmGBgZI
      5QqMD/cxMjnL0tw0iYxKIpHY5IiFrWhbJkAxNs6Hl/r54L33AViYGuDD318lFlomk1rgd+99
      zpkzn2FTCpw9e4YPz3zCyPTKJkctbEXbLgHmx/u50d2NZ9chzNKXJUBrxy6qzApVdgs992Z5
      6ZVjBLzVfHy+mwNdHVjVNNcvfEjPpEgC4Zu2XV+gxs4DNLZ3MP3Lv8HfcYDR4VFSoVFmZie4
      fClFVjETnJ1Ddjqosfjo2ttFVV0bhe4vcNlF5VH4JlEJFna0bXcLJAjrSSSAsKPdrwNks1ky
      mcy67jyVSq3r/rYiTdOQ5cr+HankY7yfADabDZtt/deEr/Q6QLFYRNmA/j5bSSUf46amta7r
      rCzOE00YT7+bTCYfca8ay8tBvl61L+SzZHMPXuUgl04wu7D8SJ3CHvbCCAVXKGhrf94QXF7m
      610Is5kUhQcuZq4Rjz/qefyjR7r4dY2l+VmWQ7E/ri2nqSRTq88vGF5ZQf3/zktRzZHJPtyq
      FPFE/OFjW4Xyi1/84hdr2kMJ2WwWu914ZtFCeonrvXP4q10UMnEiKRVZL6IXVBbGe7g5kWBl
      bgT48gsoqlnyGuSyOZbmZzHZHSzPTZFLx/j8ai/NrU1osRl++8l19u5vZ3Z6AV3Ls7IwxUIw
      SV4rkoqESak6xUyMSEpFzyVYjqbxuKxc/aIbf6AeE3nmliJ4PK516XWpFzP84aOPMNe1oyWC
      BCNxorE4dpuJmblFbBYT4XCMhcUFXHYz0/NBKKYJRtMoeo75hWXsTjcmcpz9u99iqmkgEYqj
      5tKMj4+gawWSOY1IaIUCJtLRZTIFmUxshUROx1klc+XKbdwOC0vhOFVWiZm5ZVweN/J6d+TU
      8ty6M0A+voRm8xBeWsBmUbl5Z5K+gR5qa/zMzS/idLlRULnw8ftovjbiy3PIskQ6nUPPrDCx
      ksdBgmBCvX9c2XiQZE4nGw9+dVw2Ll+5jNdhZykcx2lTmJ5dwOn2PPRxbWo7gMleS2vtEsMj
      I8goWKQss0oVjW4zKU3B4fZSCC6Riswzv7BAsZBFzxeRzTLLCZWmaJzI/AJ7DuzB7nRhURQG
      hiYIeAr0TSxCJMTgcISj+5qJxONEInnCoQKKPk08NIfiaqDWoVGw1dJc70RXqqiv83P9ymX8
      LoVJu5eOmrVPDRxdmEBzuBgZHKWKOLqmUV0lMTykUSiqRFc85Cx1SOkVwstL7D14mJmRe4xM
      LNLUXIvLbmXKUk1tbpSiN8Bw7138DhcpzUS9VyYbD5EtRonioTh5hchSFE9TC9ZcHGfDbgL+
      RgD6+4ew6jJT8wqH9h3asDEbFpuDxjoTd25eR9XyJDPNKBYbVXoV2egSg/f6ycoOWm0RsnYv
      4wND+KuKTI+PcPS5F/n7+fhziRChWJEYHrSpG0RXlrDXNOEopr86Lg8AfV8d1+yiib1dTzzS
      cW1qAmjZBOFUHrfPj5KNkdbcVFdJzAYTdO7vIjSyQHVtPbVOC17JytRCGJMpzt69u7jbN06g
      tgY5n0WVLDjIk1WLWHz1vPTkM4yOjGHzeXH7/bhcVjKqGdlmxmYxQSGJp0pBsvtxmFSWonk0
      yUZjjZWbPQPUVrtZiqRo15KkcmYc1rWdpqRq4tTpl5mbmkAxNyCj47GC1SsRiaXw+91YfQ3E
      l1WsssbE9ByKZKKxsQGf34fPaUe1mggn7Lz2ykssDt1GNVdT76rGrMWRJbAUZapsfvLWLA6L
      DWdNHWStJPM5QKamxo/FLGMDChadyek5Gmq91NbVY1rPG2FJBjXBRMjJU8f2Mzg+R42/GovV
      RDIUIZHJU13XgMtuIZ6ROfXCSyxMT2I2Kfj8frwOG9mig8jCKK5GPx63BYfNj2rN4bSasXkD
      yPnEV8cFtTW1WMwWbIBeJTM9NYNa56cu8HDH9f8AYyo3HCddWvYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q3.3' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q4.Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q4.Extra_Vis' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
